{"version":3,"file":"static/js/TopRatedMoviesPage.d845135b.chunk.js","mappings":"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","sources":["animations.js","components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/TopRatedMoviesPage/TopRatedMoviesPage.styled.jsx","pages/TopRatedMoviesPage/TopRatedMoviesPage.jsx","services/moviesApi.jsx","../node_modules/@mui/icons-material/KeyboardBackspace.js","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["export const textVariants = {\r\n  open: { opacity: 1, y: 0, transition: { delay: 0.5 } },\r\n  closed: { opacity: 0, y: '50%' },\r\n};\r\n\r\nexport const modalVariants = {\r\n  open: { opacity: 1, scale: 1.0, x: '-50%', y: '-50%' },\r\n  closed: { opacity: 0, scale: 0.7, x: '-50%', y: '-50%' },\r\n};\r\n\r\nexport const pageVariants = {\r\n  open: { opacity: 1, height: '100%' },\r\n  closed: { opacity: 0, height: 0 },\r\n  exit: {\r\n    y: window.innerHeight,\r\n    opacity: 0,\r\n    transition: { duration: 0.3, delay: 0.3 },\r\n  },\r\n};\r\n\r\nexport const pageInfoVariants = {\r\n  open: { opacity: 1 },\r\n  closed: { opacity: 0 },\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const List = styled.ul`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 15px 0;\r\n\r\n  & > li + li {\r\n    margin-top: 10px;\r\n\r\n    @media ${device.tablet} {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 10px;\r\n    justify-items: center;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { List } from './CardList.styled';\r\n\r\nconst CardList = ({ children }) => <List>{children}</List>;\r\n\r\nCardList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n","import styled from '@emotion/styled';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst Wrap = styled(IconButton)`\r\n  position: sticky;\r\n  top: 0;\r\n  right: 95vw;\r\n  z-index: 2;\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n  width: 60px;\r\n  height: 60px;\r\n\r\n  & > svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nexport default Wrap;\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport Wrap from './GoBackButton.styled';\r\n\r\nconst GoBackButton = ({ path, state }) => (\r\n  <Link to={path} state={{ state }}>\r\n    <Wrap>\r\n      <KeyboardBackspaceIcon />\r\n    </Wrap>\r\n  </Link>\r\n);\r\n\r\nGoBackButton.propTypes = {\r\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  state: PropTypes.shape({\r\n    from: PropTypes.shape({\r\n      location: PropTypes.object,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default GoBackButton;\r\n","export const getGenreName = (genreIds) => {\r\n  const genres = window.localStorage.getItem('moviesGenres');\r\n  const parsedGenres = JSON.parse(genres);\r\n  let movieGenre = null;\r\n  let name = null;\r\n  if (parsedGenres && genreIds.length > 0) {\r\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\r\n    name = movieGenre.name;\r\n  }\r\n  return name\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Rating } from '@mui/material';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 85vw;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n\r\n  & > img {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(29, 29, 29, 0) 0%,\r\n      rgba(29, 29, 29, 0.8) 80.79%\r\n    );\r\n  }\r\n\r\n  & > p {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    @media ${device.tablet} {\r\n      font-weight: 400;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 28vw;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 17vw;\r\n  }\r\n`;\r\n\r\nexport const Genre = styled.span`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 5px;\r\n  background: rgba(29, 29, 29, 0.5);\r\n  border-radius: 0px 8px;\r\n  color: ${props => props.theme.bgElementColor};\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 0;\r\n`;\r\n\r\nexport const Rate = styled(Rating)`\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { getGenreName } from 'services/getGenre';\r\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { poster_path, title, vote_average, genre_ids } = movie;\r\n  let genreNames = null;\r\n  if (genre_ids) {\r\n    genreNames = getGenreName(genre_ids);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        {genreNames && <Genre>{genreNames}</Genre>}\r\n        <img\r\n          src={\r\n            poster_path !== null\r\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\r\n              : imageNotFound\r\n          }\r\n          alt={title}\r\n        />\r\n        <InfoWrap>\r\n          {vote_average > 0 && (\r\n            <Rate\r\n              name=\"read-only\"\r\n              value={vote_average.toFixed(1) / 2}\r\n              readOnly\r\n              precision={0.5}\r\n            />\r\n          )}\r\n        </InfoWrap>\r\n      </Container>\r\n      <p>{title}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FetchMarker = styled.div`\r\n  width: 5px;\r\n  height: 5px;\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { toast } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { fetchTopRatedMovies } from '../../services/moviesApi';\r\nimport CardList from 'components/CardList';\r\nimport MovieCard from 'components/MovieCard';\r\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\r\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\r\nimport { FetchMarker } from './TopRatedMoviesPage.styled';\r\nimport { pageVariants } from 'animations';\r\n\r\nconst TopRatedMoviesPage = () => {\r\n  const location = useLocation();\r\n\r\n  const { ref: ListRef, inView } = useInView({\r\n    threshold: 0.1,\r\n  });\r\n\r\n  const { data, error, fetchNextPage, isLoading, isError, isSuccess } =\r\n    useInfiniteQuery(['topRatedMovies'], fetchTopRatedMovies, {\r\n      staleTime: 60000,\r\n      cacheTime: 60000,\r\n      getNextPageParam: pages => {\r\n        if (pages.nextPage > pages.totalPages) {\r\n          return undefined;\r\n        }\r\n        return pages.nextPage;\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      fetchNextPage();\r\n    }\r\n  }, [fetchNextPage, inView]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0 });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <GallerySkeleton />;\r\n  }\r\n\r\n  if (isError) {\r\n    return toast.error(`Ошибка: ${error.message}`);\r\n  }\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={'closed'}\r\n      animate={'open'}\r\n      exit={'exit'}\r\n      variants={pageVariants}\r\n    >\r\n      <GoBackButton path={'/'} />\r\n      {isSuccess && (\r\n        <>\r\n          {data.pages.map(({ results, nextPage }) => (\r\n            <CardList key={`id${nextPage}`}>\r\n              {results.map(movie => (\r\n                <li key={movie.id}>\r\n                  <Link\r\n                    to={`/movies/${movie.id}`}\r\n                    state={{\r\n                      from: {\r\n                        location,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MovieCard movie={movie}></MovieCard>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </CardList>\r\n          ))}\r\n        </>\r\n      )}\r\n      <FetchMarker ref={ListRef}></FetchMarker>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default TopRatedMoviesPage;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst key = `105ba628fde77462ee84526f3393a31c`;\r\n\r\nexport async function fetchTrendmovies() {\r\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchMoviesGenres() {\r\n  const response = await axios.get(\r\n    `genre/movie/list?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.genres;\r\n}\r\n\r\nexport async function fetchMoviesByGenre({ pageParam = 1, queryKey }) {\r\n  const [_key, { genreId }] = queryKey;\r\n  console.log(_key);\r\n  const response = await axios.get(\r\n    `discover/movie?api_key=${key}&with_genres=${genreId}&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchSimilarMovies() {\r\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\r\n  const response = await axios.get(\r\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\r\n  );\r\n  const results = response.data.results;\r\n  return { results };\r\n}\r\n\r\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\r\n  const response = await axios.get(\r\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\r\n  const response = await axios.get(\r\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function searchMovie({ pageParam = 1, queryKey }) {\r\n  const [_key, { query }] = queryKey;\r\n  console.log(`${_key}`);\r\n  if (!query) {\r\n    return;\r\n  }\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  if (!results.length) {\r\n    toast.info('Movies were not found');\r\n  }\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function movieDetails({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function similarMovies({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\r\n    );\r\n    const results = response.data.results;\r\n    const totalPages = response.data.total_pages;\r\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function actorDetails({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `person/${actorId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function filmsByActor({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function movieCast({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function movieReviews({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchMovieTrailers(movieId) {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.results;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\n\nexports.default = _default;","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  // Store the onChange callback in a `ref`, so we can access the latest instance inside the `useCallback`.\n  callback.current = onChange;\n\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n            if (callback.current) callback.current(inView, entry);\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  React.useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["textVariants","open","opacity","y","transition","delay","closed","modalVariants","scale","x","pageVariants","height","exit","window","innerHeight","duration","pageInfoVariants","List","styled","device","children","IconButton","theme","bgElementColor","path","state","to","KeyboardBackspace","Container","Card","props","textColor","Genre","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","localStorage","getItem","parsedGenres","JSON","parse","name","length","find","id","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","FetchMarker","location","useLocation","useInView","threshold","ListRef","ref","inView","useInfiniteQuery","fetchTopRatedMovies","staleTime","cacheTime","getNextPageParam","pages","nextPage","totalPages","data","error","fetchNextPage","isLoading","isError","isSuccess","useEffect","scrollTo","top","GallerySkeleton","toast","message","console","log","motion","initial","animate","variants","GoBackButton","map","results","CardList","from","MovieCard","axios","key","fetchTrendmovies","response","fetchMoviesGenres","fetchMoviesByGenre","pageParam","queryKey","_key","genreId","total_pages","fetchSimilarMovies","pageNumber","Math","floor","random","fetchUpcomingMovies","searchMovie","query","movieDetails","movieId","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","Object","keys","sort","filter","root","has","set","toString","get","createObserver","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","some","intersectionRatio","trackVisibility","isVisible","target","callback","Array","isArray","observe","element","fallbackInView","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","isPlainChildren","React","rootMargin","triggerOnce","skip","initialInView","onChange","setState","current","setRef","node","result"],"sourceRoot":""}
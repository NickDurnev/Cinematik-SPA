{"version":3,"file":"static/js/movieDetailsPage.b2f5daa9.chunk.js","mappings":"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","sources":["components/Notify/Notify.styled.jsx","components/Notify/Notify.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/moviesAPI.js","../node_modules/@mui/icons-material/SentimentVeryDissatisfied.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Wrap = styled(motion.div)`\r\n  width: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default Wrap;\r\n","import PropTypes from 'prop-types';\r\nimport Wrap from './Notify.styled';\r\nimport { textVariants } from 'animations';\r\n\r\nconst Notify = ({ children, delay = 0 }) => (\r\n  <Wrap initial={'closed'} animate={'open'} variants={textVariants(delay)}>\r\n    {children}\r\n  </Wrap>\r\n);\r\n\r\nNotify.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  padding: PropTypes.string,\r\n};\r\n\r\nexport default Notify;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useQuery, useMutation } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\nimport {\r\n  addToFavoriteMovies,\r\n  addToWatchedMovies,\r\n  checkFavoriteById,\r\n  deleteMovie,\r\n} from '../../services/moviesAPI';\r\nimport GoBackButton from '../GoBackButton/GoBackButton';\r\nimport {\r\n  PageWrap,\r\n  InfoWrap,\r\n  Container,\r\n  MainInfo,\r\n  MovieGenresList,\r\n  AddInfo,\r\n  StyledLink,\r\n  LinkWrap,\r\n  Button,\r\n  IconButton,\r\n} from './MovieInfo.styled';\r\nimport { ReactComponent as TelIcon } from '../../images/icons/Telev.svg';\r\nimport { ReactComponent as StarIcon } from '../../images/icons/Star.svg';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst Movieinfo = ({ movieData, handleTrailerToggle, handleVerifyToggle }) => {\r\n  const [prevLocationState, setPrevLocationState] = useState(null);\r\n  const [addedToFavorites, setAddedToFavorites] = useState(null);\r\n  const [enableFavoriteCheck, setEnableFavoriteCheck] = useState(true);\r\n  const [userId] = useLocalStorage('userID', null);\r\n\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const {\r\n    id,\r\n    poster_path,\r\n    release_date,\r\n    vote_average,\r\n    title,\r\n    tagline,\r\n    runtime,\r\n    overview,\r\n    budget,\r\n    genres,\r\n  } = movieData;\r\n  const dataToFetch = {\r\n    idbID: id,\r\n    poster_path,\r\n    title,\r\n    vote_average,\r\n    genres,\r\n    release_date,\r\n    tagline,\r\n    runtime,\r\n    overview,\r\n    budget,\r\n  };\r\n\r\n  const addToFavoriteQuery = useQuery(\r\n    ['addFavoriteMovie', { userId, dataToFetch }],\r\n    addToFavoriteMovies,\r\n    { refetchOnWindowFocus: false, enabled: false }\r\n  );\r\n\r\n  const addToWatchedQuery = useQuery(\r\n    ['addWatchedMovie', { userId, dataToFetch }],\r\n    addToWatchedMovies,\r\n    { refetchOnWindowFocus: false, enabled: false }\r\n  );\r\n\r\n  const checkFavoriteByIDQuery = useQuery(\r\n    ['checkFavoriteMovie', { userId, id }],\r\n    checkFavoriteById,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      enabled: enableFavoriteCheck,\r\n    }\r\n  );\r\n\r\n  const useDeleteMovie = () => useMutation(data => deleteMovie(data));\r\n  const { mutate } = useDeleteMovie();\r\n\r\n  const addToFavorite = () => {\r\n    if (!userId) {\r\n      handleVerifyToggle(true);\r\n      return;\r\n    }\r\n    addToFavoriteQuery.refetch();\r\n  };\r\n\r\n  const addToWatched = () => {\r\n    if (!userId) {\r\n      handleVerifyToggle(true);\r\n      return;\r\n    }\r\n    addToWatched.refetch();\r\n    if (addToWatchedQuery.isSuccess) {\r\n      setAddedToFavorites(true);\r\n    }\r\n    mutate([userId, checkFavoriteByIDQuery.data?.id]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPrevLocationState(location.state);\r\n  }, [location.state]);\r\n\r\n  useEffect(() => {\r\n    if (checkFavoriteByIDQuery.data?.id) {\r\n      setEnableFavoriteCheck(false);\r\n      setAddedToFavorites(true);\r\n      console.log(checkFavoriteByIDQuery.data);\r\n    }\r\n  }, [checkFavoriteByIDQuery.data]);\r\n\r\n  useEffect(() => {\r\n    if (addToFavoriteQuery.isSuccess) {\r\n      setAddedToFavorites(true);\r\n    }\r\n    if (addToFavoriteMovies.isError) {\r\n      toast.error(`Error: ${addToFavoriteMovies.error.response.data.message}`);\r\n    }\r\n  }, [addToFavoriteQuery.isSuccess, addToFavoriteQuery.isError]);\r\n\r\n  useEffect(() => {\r\n    if (addToWatchedQuery.isError) {\r\n      toast.error(`Error: ${addToWatchedQuery.error.response.data.message}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [addToWatchedQuery.isError]);\r\n\r\n  return (\r\n    <PageWrap>\r\n      <GoBackButton\r\n        path={\r\n          prevLocationState?.from?.location ??\r\n          prevLocationState?.from?.prevLocation ??\r\n          '/'\r\n        }\r\n        state={{\r\n          from: {\r\n            location,\r\n          },\r\n        }}\r\n      />\r\n      <Container>\r\n        <div>\r\n          <img\r\n            src={\r\n              poster_path !== null\r\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                : imageNotFound\r\n            }\r\n            alt={title}\r\n          />\r\n          {addedToFavorites ? (\r\n            <IconButton onClick={() => addToWatched()}>\r\n              Add to watched\r\n              <TelIcon />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={() => addToFavorite()}>\r\n              Add to favorites\r\n              <StarIcon />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n        <InfoWrap>\r\n          <h1>{title}</h1>\r\n          {tagline !== '' && <h2>\"{tagline}\"</h2>}\r\n          <p>{overview}</p>\r\n          <MainInfo>\r\n            <li>\r\n              <p>Release date:</p>\r\n              <p>Runtime:</p>\r\n              {budget !== 0 && <p>Budget:</p>}\r\n            </li>\r\n            <li>\r\n              <p> {release_date}</p>\r\n              <p>{runtime} minutes </p>\r\n              {budget !== 0 && <p>{budget} $</p>}\r\n            </li>\r\n          </MainInfo>\r\n          <MovieGenresList>\r\n            {genres.map(({ id, name }) => (\r\n              <li key={id}>\r\n                <Link\r\n                  to={`/movies/by_genre=${id}`}\r\n                  state={{\r\n                    from: {\r\n                      location,\r\n                    },\r\n                  }}\r\n                >\r\n                  {name}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </MovieGenresList>\r\n          <Button type=\"button\" padding=\"10px\" onClick={handleTrailerToggle}>\r\n            Watch Trailer\r\n          </Button>\r\n          <AddInfo>\r\n            <LinkWrap>\r\n              <StyledLink\r\n                to={`/movies/${movieId}/cast`}\r\n                state={{\r\n                  ...prevLocationState,\r\n                }}\r\n              >\r\n                Cast\r\n              </StyledLink>\r\n              <StyledLink\r\n                to={`/movies/${movieId}/reviews`}\r\n                state={{\r\n                  ...prevLocationState,\r\n                }}\r\n              >\r\n                Reviews\r\n              </StyledLink>\r\n              <StyledLink\r\n                to={`/movies/${movieId}/similar_movies`}\r\n                state={{\r\n                  ...prevLocationState,\r\n                }}\r\n              >\r\n                Similar Movies\r\n              </StyledLink>\r\n            </LinkWrap>\r\n          </AddInfo>\r\n        </InfoWrap>\r\n      </Container>\r\n    </PageWrap>\r\n  );\r\n};\r\n\r\nMovieinfo.propTypes = {\r\n  movieData: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    release_date: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    tagline: PropTypes.string.isRequired,\r\n    runtime: PropTypes.number.isRequired,\r\n    budget: PropTypes.number,\r\n    genres: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n  handleTrailerToggle: PropTypes.func.isRequired,\r\n  handleVerifyToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Movieinfo;\r\n","import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Frame = styled.iframe`\r\n  width: 360px;\r\n  height: 230px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: inherit;\r\n\r\n  @media ${device.tablet} {\r\n    width: 600px;\r\n    height: 400px;\r\n  }\r\n`;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport ThreeDots from 'components/Loaders/Loader';\r\nimport { movieDetails } from 'services/moviesIDBService';\r\nimport MovieInfo from 'components/MovieInfo';\r\nimport Modal from 'components/Modal/Modal';\r\nimport Warning from 'components/Warning';\r\nimport Notify from 'components/Notify';\r\nimport { fetchMovieTrailers } from '../../services/moviesIDBService';\r\nimport { Frame } from './MovieDetailsPage.styled';\r\nimport { pageInfoVariants } from 'animations';\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  let navigate = useNavigate();\r\n  const youtubeURL = useRef('https://www.youtube.com/embed/');\r\n  const [isTrailerModalOpen, setisTrailerModalOpen] = useState(false);\r\n  const [isVerifyModalOpen, setIsVerifyModalOpen] = useState(false);\r\n  const [movieTrailer, setMovieTrailer] = useState(null);\r\n\r\n  const handleTrailerToggle = async bool => {\r\n    if (!bool) {\r\n      setisTrailerModalOpen(false);\r\n      return;\r\n    }\r\n    setisTrailerModalOpen(true);\r\n    if (!movieTrailer) {\r\n      const trailer = await addMovieTrailer();\r\n      sessionStorage.setItem('trailer', JSON.stringify(trailer));\r\n      setMovieTrailer(trailer);\r\n    }\r\n  };\r\n\r\n  const handleVerifyToggle = async bool => {\r\n    if (!bool) {\r\n      setIsVerifyModalOpen(false);\r\n      return;\r\n    }\r\n    setIsVerifyModalOpen(true);\r\n  };\r\n\r\n  const addMovieTrailer = async () => {\r\n    const trailers = await fetchMovieTrailers(movieId);\r\n    const officicalTrailer = trailers.find(({ name }) =>\r\n      name.includes('Official')\r\n    );\r\n    return officicalTrailer;\r\n  };\r\n\r\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\r\n    ['movieDetails', { movieId }],\r\n    movieDetails,\r\n    { staleTime: 60000, cacheTime: 60000 }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data === 404) {\r\n      const prevMovieId = localStorage.getItem('movieId');\r\n      navigate(`/movies/${prevMovieId}`);\r\n    }\r\n  }, [data, navigate]);\r\n\r\n  if (isLoading) {\r\n    return <ThreeDots />;\r\n  }\r\n\r\n  if (isError) {\r\n    return toast.error(`Ошибка: ${error.message}`);\r\n  }\r\n\r\n  if (isSuccess && data !== 404) {\r\n    localStorage.setItem('movieId', JSON.stringify(+movieId));\r\n    return (\r\n      <motion.div\r\n        initial={'closed'}\r\n        animate={'open'}\r\n        exit={'exit'}\r\n        variants={pageInfoVariants}\r\n      >\r\n        <MovieInfo\r\n          movieData={data}\r\n          handleTrailerToggle={bool => handleTrailerToggle(bool)}\r\n          handleVerifyToggle={bool => handleVerifyToggle(bool)}\r\n        />\r\n        <AnimatePresence>\r\n          {isTrailerModalOpen && (\r\n            <Modal onModal={bool => handleTrailerToggle(bool)}>\r\n              {movieTrailer && (\r\n                <Frame\r\n                  src={`${youtubeURL.current}${movieTrailer.key}?autoplay=0&mute=0&controls=1`}\r\n                  title=\"video\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></Frame>\r\n              )}\r\n              {!movieTrailer && (\r\n                <Notify>\r\n                  <h2>We don't have trailer for this movie</h2>\r\n                  <SentimentVeryDissatisfiedIcon sx={{ fontSize: 70, mt: 1 }} />\r\n                </Notify>\r\n              )}\r\n            </Modal>\r\n          )}\r\n          {isVerifyModalOpen && (\r\n            <Modal onModal={bool => handleVerifyToggle(bool)} padding={'30px'}>\r\n              <Warning />\r\n            </Modal>\r\n          )}\r\n        </AnimatePresence>\r\n        <Outlet />\r\n      </motion.div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://nodejs-cinematik-rest-api.onrender.com/';\r\n\r\nexport async function fetchMovies({ pageParam = 1, queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { userId, limit, category }] = queryKey;\r\n  const { data } = await axios.get(\r\n    `${baseURL}movies/${userId}?page=${pageParam}&limit=${limit}&category=${category}`\r\n  );\r\n  const movies = data.data.movies;\r\n  return { movies, nextPage: pageParam + 1 };\r\n}\r\n\r\nexport async function deleteMovie(data) {\r\n  const [userID, movieID] = data;\r\n  const response = await axios.delete(`${baseURL}movies/${userID}/${movieID}`);\r\n  return response?.data;\r\n}\r\n\r\nexport async function checkFavoriteById({ queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { userId, id }] = queryKey;\r\n  const { data } = await axios.get(\r\n    `${baseURL}movies/favorites/${userId}/${id}`\r\n  );\r\n  return data;\r\n}\r\n\r\nexport async function addToFavoriteMovies({ queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { userId, dataToFetch }] = queryKey;\r\n  const { data } = await axios.post(\r\n    `${baseURL}movies/${userId}?category=favorites`,\r\n    dataToFetch\r\n  );\r\n  return data;\r\n}\r\n\r\nexport async function addToWatchedMovies({ queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { userId, dataToFetch }] = queryKey;\r\n  const response = await axios.post(\r\n    `${baseURL}movies/${userId}?category=watched`,\r\n    dataToFetch\r\n  );\r\n  return response.data;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"15.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"8.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z\"\n}, \"2\")], 'SentimentVeryDissatisfied');\n\nexports.default = _default;"],"names":["styled","motion","children","delay","initial","animate","variants","textVariants","movieData","handleTrailerToggle","handleVerifyToggle","useState","prevLocationState","setPrevLocationState","addedToFavorites","setAddedToFavorites","enableFavoriteCheck","setEnableFavoriteCheck","useLocalStorage","userId","location","useLocation","movieId","useParams","id","poster_path","release_date","vote_average","title","tagline","runtime","overview","budget","genres","dataToFetch","idbID","addToFavoriteQuery","useQuery","addToFavoriteMovies","refetchOnWindowFocus","enabled","addToWatchedQuery","addToWatchedMovies","checkFavoriteByIDQuery","checkFavoriteById","mutate","useMutation","data","deleteMovie","addToWatched","refetch","isSuccess","useEffect","state","console","log","toast","isError","error","response","message","GoBackButton","path","from","prevLocation","src","imageNotFound","alt","onClick","Star","map","name","to","type","padding","Frame","device","navigate","useNavigate","youtubeURL","useRef","isTrailerModalOpen","setisTrailerModalOpen","isVerifyModalOpen","setIsVerifyModalOpen","movieTrailer","setMovieTrailer","bool","addMovieTrailer","trailer","sessionStorage","setItem","JSON","stringify","fetchMovieTrailers","trailers","officicalTrailer","find","includes","movieDetails","staleTime","cacheTime","isLoading","prevMovieId","localStorage","getItem","exit","pageInfoVariants","MovieInfo","AnimatePresence","Modal","onModal","current","key","allow","allowFullScreen","Notify","SentimentVeryDissatisfied","sx","fontSize","mt","Warning","baseURL","fetchMovies","pageParam","queryKey","limit","category","axios","movies","nextPage","userID","movieID","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}
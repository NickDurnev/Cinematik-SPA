{"version":3,"file":"static/js/welcome-page.941b44eb.chunk.js","mappings":"yMAQA,GALaA,EAAAA,EAAAA,GAAOC,EAAAA,EAAAA,IAAPD,CAAH,+D,mBCYV,EAXe,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAH,IAAaC,MAAAA,OAAb,MAAqB,EAArB,SACb,SAAC,EAAD,CAAMC,QAAS,SAAUC,QAAS,OAAQC,UAAUC,EAAAA,EAAAA,IAAaJ,GAAjE,SACGD,M,iLCFE,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,kGAA2BC,EAA3B,EAA2BA,SAA3B,UAEsBA,EAFtB,QAEUC,EAFV,KAEUA,OAFV,SAGkBC,IAAAA,IAAA,gBAAmBD,IAHrC,cAGCE,EAHD,yBAIEA,EAASC,MAJX,kEAFPF,IAAAA,SAAAA,QAAyB,kD,gECCZG,EAAad,EAAAA,EAAAA,IAAH,ycAMbe,G,SCgDV,EA9CoB,WAClB,OAAgCC,EAAAA,EAAAA,UAAS,QAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsBC,EAAAA,EAAAA,GAAgB,SAAU,MAAvCC,GAAT,eACMC,GAAWC,EAAAA,EAAAA,MACTZ,GAAWa,EAAAA,EAAAA,MAAXb,OAER,GAA4Cc,EAAAA,EAAAA,UAC1C,CAAC,UAAW,CAAEd,OAAAA,IACdF,EACA,CACEiB,gBAAiB,MAJbZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,MAsBlC,OAdAC,EAAAA,EAAAA,YAAU,WACJF,IACFP,EAAUP,EAAKA,KAAKiB,KAAKC,KACzBb,EAAYL,EAAKA,KAAKiB,KAAKE,MAC3BC,YAAW,WACTZ,EAAS,OACR,MAEDK,GACFQ,EAAAA,GAAAA,MAAA,iBAAsBN,EAAMhB,SAASC,KAAKsB,YAG3C,CAACtB,EAAMa,EAASC,KAGjB,SAAC1B,EAAA,MAAD,CACEG,QAAS,SACTC,QAAS,OACT+B,KAAM,OACN9B,SAAU+B,EAAAA,GAJZ,UAME,SAACvB,EAAD,WACE,4BACE,UAACwB,EAAA,EAAD,uBAAkBrB,MAClB,SAACqB,EAAA,EAAD,CAAQnC,MAAO,EAAf,8BACA,SAACmC,EAAA,EAAD,CAAQnC,MAAO,EAAf,gD","sources":["components/Notify/Notify.styled.jsx","components/Notify/Notify.jsx","services/userAPI.js","pages/WelcomePage/WelcomePgae.styled.jsx","pages/WelcomePage/WelcomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Wrap = styled(motion.div)`\r\n  width: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default Wrap;\r\n","import PropTypes from 'prop-types';\r\nimport Wrap from './Notify.styled';\r\nimport { textVariants } from 'animations';\r\n\r\nconst Notify = ({ children, delay = 0 }) => (\r\n  <Wrap initial={'closed'} animate={'open'} variants={textVariants(delay)}>\r\n    {children}\r\n  </Wrap>\r\n);\r\n\r\nNotify.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  padding: PropTypes.string,\r\n};\r\n\r\nexport default Notify;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://nodejs-cinematik-rest-api.onrender.com/';\r\n\r\nexport async function fetchUser({ queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { userID }] = queryKey;\r\n  const response = await axios.get(`users/${userID}`);\r\n  return response.data;\r\n}\r\n","import styled from '@emotion/styled';\r\nimport image from '../../images/welcomepage_wallpaper_desktop.jpg';\r\n\r\nexport const Background = styled.div`\r\n  background: linear-gradient(\r\n      180deg,\r\n      rgba(0, 0, 0, 0) 0%,\r\n      rgba(0, 0, 0, 0.9) 100%\r\n    ),\r\n    url(${image});\r\n  width: 100vw;\r\n  height: auto;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n\r\n  & > div {\r\n    width: 97vw;\r\n    height: 100vh;\r\n    padding: 30vh 20vw;\r\n  }\r\n\r\n  & div {\r\n    text-transform: capitalize;\r\n    font-size: 80px;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { fetchUser } from '../../services/userAPI';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport { pageVariants } from 'animations';\r\nimport Notify from 'components/Notify';\r\nimport { Background } from './WelcomePgae.styled';\r\n\r\nconst WelcomePage = () => {\r\n  const [userName, setUserName] = useState('User');\r\n  const [, setUserID] = useLocalStorage('userID', null);\r\n  const navigate = useNavigate();\r\n  const { userID } = useParams();\r\n\r\n  const { data, isError, isSuccess, error } = useQuery(\r\n    ['getUser', { userID }],\r\n    fetchUser,\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      setUserID(data.data.user._id);\r\n      setUserName(data.data.user.name);\r\n      setTimeout(() => {\r\n        navigate(`/`);\r\n      }, 4000);\r\n    }\r\n    if (isError) {\r\n      toast.error(`Error: ${error.response.data.message}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isError, isSuccess]);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={'closed'}\r\n      animate={'open'}\r\n      exit={'exit'}\r\n      variants={pageVariants}\r\n    >\r\n      <Background>\r\n        <div>\r\n          <Notify>Welcome, {userName}</Notify>\r\n          <Notify delay={1}>You look lonely</Notify>\r\n          <Notify delay={2}>Enjoy your cinema journey</Notify>\r\n        </div>\r\n      </Background>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n"],"names":["styled","motion","children","delay","initial","animate","variants","textVariants","fetchUser","queryKey","userID","axios","response","data","Background","image","useState","userName","setUserName","useLocalStorage","setUserID","navigate","useNavigate","useParams","useQuery","refetchInterval","isError","isSuccess","error","useEffect","user","_id","name","setTimeout","toast","message","exit","pageVariants","Notify"],"sourceRoot":""}
{"version":3,"file":"static/js/ActorsMoviesPage.a891efd9.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/ActorsMoviesPage/ActorsMoviesPage.styled.jsx","pages/ActorsMoviesPage/ActorsMoviesPage.jsx","services/moviesIDBService.js","../node_modules/@mui/icons-material/KeyboardBackspace.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const List = styled.ul`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 15px 0;\r\n\r\n  & > li + li {\r\n    margin-top: 10px;\r\n\r\n    @media ${device.tablet} {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 10px;\r\n    justify-items: center;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { List } from './CardList.styled';\r\n\r\nconst CardList = ({ children }) => (\r\n  <List>\r\n    <AnimatePresence>{children}</AnimatePresence>\r\n  </List>\r\n);\r\n\r\nCardList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n","import styled from '@emotion/styled';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst Wrap = styled(IconButton)`\r\n  position: sticky;\r\n  top: 0;\r\n  right: 95vw;\r\n  z-index: 2;\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n  width: 60px;\r\n  height: 60px;\r\n\r\n  & > svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nexport default Wrap;\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport Wrap from './GoBackButton.styled';\r\n\r\nconst GoBackButton = ({ path, state }) => (\r\n  <Link to={path} state={{ state }}>\r\n    <Wrap>\r\n      <KeyboardBackspaceIcon />\r\n    </Wrap>\r\n  </Link>\r\n);\r\n\r\nGoBackButton.propTypes = {\r\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  state: PropTypes.shape({\r\n    from: PropTypes.shape({\r\n      location: PropTypes.object,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default GoBackButton;\r\n","export const getGenreName = (genreIds) => {\r\n  const genres = window.localStorage.getItem('moviesGenres');\r\n  const parsedGenres = JSON.parse(genres);\r\n  let movieGenre = null;\r\n  let name = null;\r\n  if (parsedGenres && genreIds.length > 0) {\r\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\r\n    name = movieGenre.name;\r\n  }\r\n  return name\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Rating } from '@mui/material';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 85vw;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n\r\n  & > img {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(29, 29, 29, 0) 0%,\r\n      rgba(29, 29, 29, 0.8) 80.79%\r\n    );\r\n  }\r\n\r\n  & > p {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    @media ${device.tablet} {\r\n      font-weight: 400;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 28vw;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 17vw;\r\n  }\r\n`;\r\n\r\nexport const Genre = styled.span`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 5px;\r\n  background: rgba(29, 29, 29, 0.5);\r\n  border-radius: 0px 8px;\r\n  color: ${props => props.theme.bgElementColor};\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 0;\r\n`;\r\n\r\nexport const Rate = styled(Rating)`\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { getGenreName } from 'services/getGenre';\r\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { poster_path, title, vote_average, genre_ids } = movie;\r\n  let genreNames = null;\r\n  if (genre_ids) {\r\n    genreNames = getGenreName(genre_ids);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        {genreNames && <Genre>{genreNames}</Genre>}\r\n        <img\r\n          src={\r\n            poster_path !== null\r\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\r\n              : imageNotFound\r\n          }\r\n          alt={title}\r\n        />\r\n        <InfoWrap>\r\n          {vote_average > 0 && (\r\n            <Rate\r\n              name=\"read-only\"\r\n              value={vote_average.toFixed(1) / 2}\r\n              readOnly\r\n              precision={0.5}\r\n            />\r\n          )}\r\n        </InfoWrap>\r\n      </Container>\r\n      <p>{title}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from '@emotion/styled';\r\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\r\n\r\nexport const GalleryButton = styled(GoBackButton)`\r\n  margin-top: 10px;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport { motion } from 'framer-motion';\r\nimport { toast } from 'react-toastify';\r\nimport { filmsByActor } from 'services/moviesIDBService';\r\nimport CardList from 'components/CardList';\r\nimport MovieCard from 'components/MovieCard';\r\nimport { GalleryButton } from './ActorsMoviesPage.styled';\r\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\r\nimport { pageVariants, textVariants } from 'animations';\r\n\r\nconst ActorsMovies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const { actorId } = useParams();\r\n  const location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\r\n    ['filmsByActor', { actorId }],\r\n    filmsByActor,\r\n    {\r\n      staleTime: 60000,\r\n      cacheTime: 60000,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data === 404) {\r\n      const prevActorId = localStorage.getItem('actorId');\r\n      navigate(`/moviesbyactor/${prevActorId}`);\r\n    }\r\n  }, [data, navigate]);\r\n\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess && data.cast.length > 0) {\r\n      setMovies([...movies, ...data.cast]);\r\n    }\r\n    if (isError) {\r\n      toast.error(`Error: ${error.response.data.message}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isError, isSuccess]);\r\n\r\n  if (isLoading) {\r\n    return <GallerySkeleton />;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={'closed'}\r\n      animate={'open'}\r\n      exit={'exit'}\r\n      variants={pageVariants}\r\n    >\r\n      {movies.length > 0 && (\r\n        <>\r\n          <GalleryButton path={location?.state?.from?.location ?? '/'} />\r\n          <CardList>\r\n            {movies.map(movie => (\r\n              <motion.li\r\n                initial={'closed'}\r\n                animate={'open'}\r\n                exit={'exit'}\r\n                variants={textVariants}\r\n                key={movie.id}\r\n              >\r\n                <Link to={`/movies/${movie.id}`}>\r\n                  <MovieCard movie={movie}></MovieCard>\r\n                </Link>\r\n              </motion.li>\r\n            ))}\r\n          </CardList>\r\n        </>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ActorsMovies;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst key = '105ba628fde77462ee84526f3393a31c';\r\n\r\nexport async function fetchTrendmovies() {\r\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchMoviesGenres() {\r\n  const response = await axios.get(\r\n    `genre/movie/list?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.genres;\r\n}\r\n\r\nexport async function fetchMoviesByGenre({ pageParam = 1, queryKey }) {\r\n  const [_key, { genreId }] = queryKey;\r\n  console.log(_key);\r\n  const response = await axios.get(\r\n    `discover/movie?api_key=${key}&with_genres=${genreId}&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchSimilarMovies() {\r\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\r\n  const response = await axios.get(\r\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\r\n  );\r\n  const results = response.data.results;\r\n  return { results };\r\n}\r\n\r\nexport async function fetchCategoryMovies({ pageParam = 1, queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { category }] = queryKey;\r\n  const response = await axios.get(\r\n    `movie/${category}?api_key=${key}&language=en-US&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function searchMovie({ pageParam = 1, queryKey }) {\r\n  const [_key, { query }] = queryKey;\r\n  console.log(`${_key}`);\r\n  if (!query) {\r\n    return;\r\n  }\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  if (!results.length) {\r\n    toast.info('Movies were not found');\r\n  }\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function movieDetails({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function similarMovies({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\r\n    );\r\n    const results = response.data.results;\r\n    const totalPages = response.data.total_pages;\r\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function actorDetails({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `person/${actorId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function filmsByActor({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const { data } = await axios.get(\r\n    `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\r\n  );\r\n  return data;\r\n}\r\n\r\nexport async function movieCast({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function movieReviews({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchMovieTrailers(movieId) {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.results;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\n\nexports.default = _default;"],"names":["List","styled","device","children","AnimatePresence","IconButton","theme","bgElementColor","path","state","to","KeyboardBackspace","Container","Card","props","textColor","Genre","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","window","localStorage","getItem","parsedGenres","JSON","parse","name","length","find","id","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","GalleryButton","GoBackButton","useState","movies","setMovies","actorId","useParams","location","useLocation","navigate","useNavigate","useQuery","filmsByActor","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","useEffect","prevActorId","console","log","cast","toast","response","message","GallerySkeleton","motion","initial","animate","exit","variants","pageVariants","from","CardList","map","textVariants","MovieCard","axios","key","fetchTrendmovies","results","fetchMoviesGenres","fetchMoviesByGenre","pageParam","queryKey","_key","genreId","totalPages","total_pages","nextPage","fetchSimilarMovies","pageNumber","Math","floor","random","fetchCategoryMovies","category","searchMovie","query","movieDetails","movieId","status","actorDetails","movieCast","movieReviews","fetchMovieTrailers","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
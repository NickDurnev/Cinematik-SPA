{"version":3,"file":"static/js/moviePage.0644d711.chunk.js","mappings":"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","sources":["animations.js","components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.jsx"],"sourcesContent":["export const textVariants = {\r\n  open: { opacity: 1, y: 0, transition: { delay: 0.5 } },\r\n  closed: { opacity: 0, y: '50%' },\r\n};\r\n\r\nexport const modalVariants = {\r\n  open: { opacity: 1, scale: 1.0, x: '-50%', y: '-50%' },\r\n  closed: { opacity: 0, scale: 0.7, x: '-50%', y: '-50%' },\r\n};\r\n\r\nexport const pageVariants = {\r\n  open: { opacity: 1, height: '100%' },\r\n  closed: { opacity: 0, height: 0 },\r\n  exit: {\r\n    y: window.innerHeight,\r\n    opacity: 0,\r\n    transition: { duration: 0.3, delay: 0.3 },\r\n  },\r\n};\r\n\r\nexport const pageInfoVariants = {\r\n  open: { opacity: 1 },\r\n  closed: { opacity: 0 },\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const List = styled.ul`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 15px 0;\r\n\r\n  & > li + li {\r\n    margin-top: 10px;\r\n\r\n    @media ${device.tablet} {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 10px;\r\n    justify-items: center;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { List } from './CardList.styled';\r\n\r\nconst CardList = ({ children }) => <List>{children}</List>;\r\n\r\nCardList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n","export const getGenreName = (genreIds) => {\r\n  const genres = window.localStorage.getItem('moviesGenres');\r\n  const parsedGenres = JSON.parse(genres);\r\n  let movieGenre = null;\r\n  let name = null;\r\n  if (parsedGenres && genreIds.length > 0) {\r\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\r\n    name = movieGenre.name;\r\n  }\r\n  return name\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Rating } from '@mui/material';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 85vw;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n\r\n  & > img {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(29, 29, 29, 0) 0%,\r\n      rgba(29, 29, 29, 0.8) 80.79%\r\n    );\r\n  }\r\n\r\n  & > p {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    @media ${device.tablet} {\r\n      font-weight: 400;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 28vw;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 17vw;\r\n  }\r\n`;\r\n\r\nexport const Genre = styled.span`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 5px;\r\n  background: rgba(29, 29, 29, 0.5);\r\n  border-radius: 0px 8px;\r\n  color: ${props => props.theme.bgElementColor};\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 0;\r\n`;\r\n\r\nexport const Rate = styled(Rating)`\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { getGenreName } from 'services/getGenre';\r\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { poster_path, title, vote_average, genre_ids } = movie;\r\n  let genreNames = null;\r\n  if (genre_ids) {\r\n    genreNames = getGenreName(genre_ids);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        {genreNames && <Genre>{genreNames}</Genre>}\r\n        <img\r\n          src={\r\n            poster_path !== null\r\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\r\n              : imageNotFound\r\n          }\r\n          alt={title}\r\n        />\r\n        <InfoWrap>\r\n          {vote_average > 0 && (\r\n            <Rate\r\n              name=\"read-only\"\r\n              value={vote_average.toFixed(1) / 2}\r\n              readOnly\r\n              precision={0.5}\r\n            />\r\n          )}\r\n        </InfoWrap>\r\n      </Container>\r\n      <p>{title}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Bar = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 10;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  /* background-color: ${props => props.theme.bgSearchBar}; */\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  & > input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n  & > input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n  & > button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  & > button:hover,\r\n  button:focus {\r\n    opacity: 1;\r\n  }\r\n  & span {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  & svg {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { SearchForm, Bar } from './Searchbar.styled';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst Searchbar = ({ onSubmit, onChange, isLoading }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onChange(inputValue);\r\n    onSubmit();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const input = e.target.value.trim();\r\n    setInputValue(input);\r\n  };\r\n\r\n  return (\r\n    <Bar>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <button type=\"submit\">\r\n          <SearchIcon />\r\n          <span>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movie\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          disabled={isLoading}\r\n        />\r\n      </SearchForm>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Searchbar;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FetchMarker = styled.div`\r\n  width: 5px;\r\n  height: 5px;\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { toast } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { searchMovie } from '../../services/moviesApi';\r\nimport Searchbar from 'components/Searchbar';\r\nimport CardList from 'components/CardList';\r\nimport MovieCard from 'components/MovieCard';\r\nimport { FetchMarker } from './MoviesPage.styled';\r\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\r\nimport { pageVariants } from 'animations';\r\n\r\nconst MoviesPage = ({ onChange, query }) => {\r\n  const location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  const { ref: ListRef, inView } = useInView({\r\n    threshold: 0.1,\r\n  });\r\n\r\n  const { data, error, fetchNextPage, isLoading, isError, isSuccess, refetch } =\r\n    useInfiniteQuery(['searchMovie', { query }], searchMovie, {\r\n      enabled: false,\r\n      staleTime: 60000,\r\n      cacheTime: 60000,\r\n      getNextPageParam: pages => {\r\n        if (!pages) {\r\n          return;\r\n        }\r\n        if (pages.nextPage > pages.totalPages) {\r\n          return undefined;\r\n        }\r\n        return pages.nextPage;\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0 });\r\n    if (location.state) {\r\n      const prevQuery = location.search.slice(7, location.search.length);\r\n      onChange(prevQuery);\r\n      refetch();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      fetchNextPage();\r\n    }\r\n  }, [fetchNextPage, inView]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (query) {\r\n      const fetch = await refetch();\r\n      if (fetch.data.pages[0].results.length !== 0) {\r\n        navigate(`?query=${query}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isError) {\r\n    return toast.error(`Ошибка: ${error.message}`);\r\n  }\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={'closed'}\r\n      animate={'open'}\r\n      exit={'exit'}\r\n      variants={pageVariants}\r\n    >\r\n      <Searchbar\r\n        onSubmit={handleSubmit}\r\n        onChange={onChange}\r\n        isLoading={isLoading}\r\n      />\r\n      {isLoading && <GallerySkeleton />}\r\n      {isSuccess && data.pages[0] && (\r\n        <div>\r\n          {data.pages.map(({ results, nextPage }) => (\r\n            <CardList key={`id${nextPage}`}>\r\n              {results.map(movie => (\r\n                <li key={movie.id}>\r\n                  <Link\r\n                    to={`/movies/${movie.id}`}\r\n                    state={{\r\n                      from: {\r\n                        location,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MovieCard movie={movie}></MovieCard>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </CardList>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <FetchMarker ref={ListRef}></FetchMarker>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst key = `105ba628fde77462ee84526f3393a31c`;\r\n\r\nexport async function fetchTrendmovies() {\r\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchMoviesGenres() {\r\n  const response = await axios.get(\r\n    `genre/movie/list?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.genres;\r\n}\r\n\r\nexport async function fetchMoviesByGenre({ pageParam = 1, queryKey }) {\r\n  const [_key, { genreId }] = queryKey;\r\n  console.log(_key);\r\n  const response = await axios.get(\r\n    `discover/movie?api_key=${key}&with_genres=${genreId}&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchSimilarMovies() {\r\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\r\n  const response = await axios.get(\r\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\r\n  );\r\n  const results = response.data.results;\r\n  return { results };\r\n}\r\n\r\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\r\n  const response = await axios.get(\r\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\r\n  const response = await axios.get(\r\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function searchMovie({ pageParam = 1, queryKey }) {\r\n  const [_key, { query }] = queryKey;\r\n  console.log(`${_key}`);\r\n  if (!query) {\r\n    return;\r\n  }\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  if (!results.length) {\r\n    toast.info('Movies were not found');\r\n  }\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function movieDetails({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function similarMovies({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\r\n    );\r\n    const results = response.data.results;\r\n    const totalPages = response.data.total_pages;\r\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function actorDetails({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `person/${actorId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function filmsByActor({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function movieCast({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function movieReviews({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchMovieTrailers(movieId) {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.results;\r\n}\r\n"],"names":["textVariants","open","opacity","y","transition","delay","closed","modalVariants","scale","x","pageVariants","height","exit","window","innerHeight","duration","pageInfoVariants","List","styled","device","children","Container","Card","props","theme","textColor","Genre","bgElementColor","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","localStorage","getItem","parsedGenres","JSON","parse","name","length","find","id","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","Bar","bgSearchBar","SearchForm","onSubmit","onChange","isLoading","useState","inputValue","setInputValue","e","preventDefault","type","Search","autoComplete","autoFocus","placeholder","input","target","trim","disabled","FetchMarker","query","location","useLocation","navigate","useNavigate","useInView","threshold","ListRef","ref","inView","useInfiniteQuery","searchMovie","enabled","staleTime","cacheTime","getNextPageParam","pages","nextPage","totalPages","data","error","fetchNextPage","isError","isSuccess","refetch","useEffect","scrollTo","top","state","prevQuery","search","slice","handleSubmit","results","toast","message","console","log","motion","initial","animate","variants","GallerySkeleton","map","CardList","to","from","MovieCard","axios","key","fetchTrendmovies","response","fetchMoviesGenres","fetchMoviesByGenre","pageParam","queryKey","_key","genreId","total_pages","fetchSimilarMovies","pageNumber","Math","floor","random","fetchTopRatedMovies","fetchUpcomingMovies","movieDetails","movieId","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers"],"sourceRoot":""}
{"version":3,"file":"static/js/movieDetailsPage.852e5aff.chunk.js","mappings":"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","sources":["components/Notify/Notify.styled.jsx","components/Notify/Notify.jsx","components/MovieInfo/MovieInfo.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/favoritesMoviesStorageActions.js","services/watchedMoviesStorageActions.js","../node_modules/@mui/icons-material/SentimentVeryDissatisfied.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Wrap = styled(motion.div)`\r\n  width: 100%;\r\n  padding: 10% 20%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default Wrap;\r\n","import PropTypes from 'prop-types';\r\nimport Wrap from './Notify.styled';\r\nimport { textVariants } from 'animations';\r\n\r\nconst Notify = ({ children }) => (\r\n  <Wrap initial={'closed'} animate={'open'} variants={textVariants}>\r\n    {children}\r\n  </Wrap>\r\n);\r\n\r\nNotify.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  padding: PropTypes.string,\r\n};\r\n\r\nexport default Notify;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { addToFavoritesMovies } from 'services/favoritesMoviesStorageActions';\r\nimport { addToWatchedMovies } from 'services/watchedMoviesStorageActions';\r\nimport GoBackButton from '../GoBackButton/GoBackButton';\r\nimport {\r\n  InfoWrap,\r\n  Container,\r\n  MainInfo,\r\n  MovieGenresList,\r\n  AddInfo,\r\n  StyledLink,\r\n  LinkWrap,\r\n  Button,\r\n  IconButton,\r\n} from './MovieInfo.styled';\r\nimport { ReactComponent as TelIcon } from '../../images/icons/Telev.svg';\r\nimport { ReactComponent as StarIcon } from '../../images/icons/Star.svg';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst Movieinfo = ({ movieData, handleModalToggle }) => {\r\n  const [prevLocationState, setPrevLocationState] = useState(null);\r\n  const [addedToFavorites, setAddedToFavorites] = useState(null);\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    setPrevLocationState(location.state);\r\n    checkMovieID();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.state]);\r\n\r\n  console.log(setPrevLocationState);\r\n\r\n  function checkMovieID() {\r\n    const savedMovies = localStorage.getItem('favoritesMovies');\r\n    let parsedMovies = JSON.parse(savedMovies);\r\n    if (!parsedMovies) {\r\n      return;\r\n    }\r\n    const filter = parsedMovies.find(({ id }) => id === movieData.id);\r\n    if (filter) {\r\n      setAddedToFavorites(movieData.id);\r\n    }\r\n  }\r\n\r\n  function handleAddMovie(data) {\r\n    addToFavoritesMovies(data);\r\n    checkMovieID();\r\n  }\r\n\r\n  console.log(movieData);\r\n\r\n  const {\r\n    poster_path,\r\n    release_date,\r\n    title,\r\n    tagline,\r\n    runtime,\r\n    overview,\r\n    budget,\r\n    genres,\r\n  } = movieData;\r\n  return (\r\n    <div>\r\n      <GoBackButton\r\n        path={\r\n          prevLocationState?.from?.location ??\r\n          prevLocationState?.from?.prevLocation ??\r\n          '/'\r\n        }\r\n        state={{\r\n          from: {\r\n            location,\r\n          },\r\n        }}\r\n      />\r\n      <Container>\r\n        <div>\r\n          <img\r\n            src={\r\n              poster_path !== null\r\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                : imageNotFound\r\n            }\r\n            alt={title}\r\n          />\r\n          {addedToFavorites ? (\r\n            <IconButton onClick={() => addToWatchedMovies(movieData)}>\r\n              Add to watched\r\n              <TelIcon />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={() => handleAddMovie(movieData)}>\r\n              Add to favorites\r\n              <StarIcon />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n        <InfoWrap>\r\n          <h1>{title}</h1>\r\n          {tagline !== '' && <h2>\"{tagline}\"</h2>}\r\n          <p>{overview}</p>\r\n          <MainInfo>\r\n            <li>\r\n              <p>Release date:</p>\r\n              <p>Runtime:</p>\r\n              {budget !== 0 && <p>Budget:</p>}\r\n            </li>\r\n            <li>\r\n              <p> {release_date}</p>\r\n              <p>{runtime} minutes </p>\r\n              {budget !== 0 && <p>{budget} $</p>}\r\n            </li>\r\n          </MainInfo>\r\n          <MovieGenresList>\r\n            {genres.map(({ id, name }) => (\r\n              <li key={id}>\r\n                <Link\r\n                  to={`/movies/by_genre=${id}`}\r\n                  state={{\r\n                    from: {\r\n                      location,\r\n                    },\r\n                  }}\r\n                >\r\n                  {name}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </MovieGenresList>\r\n          <Button type=\"button\" padding=\"10px\" onClick={handleModalToggle}>\r\n            Watch Trailer\r\n          </Button>\r\n          <AddInfo>\r\n            <LinkWrap>\r\n              <StyledLink\r\n                to={`/movies/${movieId}/cast`}\r\n                state={{\r\n                  ...prevLocationState,\r\n                }}\r\n              >\r\n                Cast\r\n              </StyledLink>\r\n              <StyledLink\r\n                to={`/movies/${movieId}/reviews`}\r\n                state={{\r\n                  ...prevLocationState,\r\n                }}\r\n              >\r\n                Reviews\r\n              </StyledLink>\r\n              <StyledLink\r\n                to={`/movies/${movieId}/similar_movies`}\r\n                state={{\r\n                  ...prevLocationState,\r\n                }}\r\n              >\r\n                Similar Movies\r\n              </StyledLink>\r\n            </LinkWrap>\r\n          </AddInfo>\r\n        </InfoWrap>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieinfo.propTypes = {\r\n  movieData: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    release_date: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    tagline: PropTypes.string.isRequired,\r\n    runtime: PropTypes.number.isRequired,\r\n    budget: PropTypes.number,\r\n    genres: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n  handleModalToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Movieinfo;\r\n","import styled from '@emotion/styled';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.backdropColor};\r\n  color: ${props => props.theme.textColor};\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const StyledModal = styled(motion.div)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  background-color: ${props => props.theme.modalBgColor};\r\n  font-weight: ${props => props.theme.mainTextFontWeight};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport { modalVariants } from 'animations';\r\nimport { StyledModal, Backdrop } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ children, onModal }) => {\r\n  const onClickClose = e => {\r\n    if (e.target.nodeName === 'DIV') {\r\n      onModal(false);\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <Backdrop onClick={onClickClose}>\r\n      <StyledModal\r\n        initial={'closed'}\r\n        animate={'open'}\r\n        exit={'closed'}\r\n        variants={modalVariants}\r\n      >\r\n        {children}\r\n      </StyledModal>\r\n    </Backdrop>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Frame = styled.iframe`\r\n  width: 360px;\r\n  height: 230px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: inherit;\r\n\r\n  @media ${device.tablet} {\r\n    width: 600px;\r\n    height: 400px;\r\n  }\r\n`;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport ThreeDots from 'components/Loaders/Loader';\r\nimport { movieDetails } from 'services/moviesApi';\r\nimport MovieInfo from 'components/MovieInfo';\r\nimport Modal from 'components/Modal/Modal';\r\nimport Notify from 'components/Notify';\r\nimport { fetchMovieTrailers } from '../../services/moviesApi';\r\nimport { Frame } from './MovieDetailsPage.styled';\r\nimport { pageInfoVariants } from 'animations';\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  let navigate = useNavigate();\r\n  const youtubeURL = useRef('https://www.youtube.com/embed/');\r\n  const [isModalOpen, setisModalOpen] = useState(false);\r\n  const [movieTrailer, setMovieTrailer] = useState(null);\r\n\r\n  const handleModalToggle = async bool => {\r\n    if (!bool) {\r\n      setisModalOpen(false);\r\n      return;\r\n    }\r\n    setisModalOpen(true);\r\n    if (!movieTrailer) {\r\n      const trailer = await addMovieTrailer();\r\n      sessionStorage.setItem('trailer', JSON.stringify(trailer));\r\n      setMovieTrailer(trailer);\r\n    }\r\n  };\r\n\r\n  const addMovieTrailer = async () => {\r\n    const trailers = await fetchMovieTrailers(movieId);\r\n    const officicalTrailer = trailers.find(({ name }) =>\r\n      name.includes('Official')\r\n    );\r\n    return officicalTrailer;\r\n  };\r\n\r\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\r\n    ['movieDetails', { movieId }],\r\n    movieDetails,\r\n    { staleTime: 60000, cacheTime: 60000 }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data === 404) {\r\n      const prevMovieId = localStorage.getItem('movieId');\r\n      navigate(`/movies/${prevMovieId}`);\r\n    }\r\n  }, [data, navigate]);\r\n\r\n  if (isLoading) {\r\n    return <ThreeDots />;\r\n  }\r\n\r\n  if (isError) {\r\n    return toast.error(`Ошибка: ${error.message}`);\r\n  }\r\n\r\n  if (isSuccess && data !== 404) {\r\n    localStorage.setItem('movieId', JSON.stringify(+movieId));\r\n    return (\r\n      <motion.div\r\n        initial={'closed'}\r\n        animate={'open'}\r\n        exit={'exit'}\r\n        variants={pageInfoVariants}\r\n      >\r\n        <MovieInfo\r\n          movieData={data}\r\n          handleModalToggle={bool => handleModalToggle(bool)}\r\n        />\r\n        <AnimatePresence>\r\n          {isModalOpen && (\r\n            <Modal onModal={bool => handleModalToggle(bool)}>\r\n              {movieTrailer && (\r\n                <Frame\r\n                  src={`${youtubeURL.current}${movieTrailer.key}?autoplay=0&mute=0&controls=1`}\r\n                  title=\"video\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></Frame>\r\n              )}\r\n              {!movieTrailer && (\r\n                <Notify>\r\n                  <h2>We don't have trailer for this movie</h2>\r\n                  <SentimentVeryDissatisfiedIcon sx={{ fontSize: 70, mt: 1 }} />\r\n                </Notify>\r\n              )}\r\n            </Modal>\r\n          )}\r\n        </AnimatePresence>\r\n        <Outlet />\r\n      </motion.div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","export function addToFavoritesMovies(data) {\r\n  const savedMovies = localStorage.getItem('favoritesMovies');\r\n  let parsedMovies = JSON.parse(savedMovies);\r\n  if (!parsedMovies) {\r\n    parsedMovies = [data];\r\n    window.localStorage.setItem(\r\n      'favoritesMovies',\r\n      JSON.stringify(parsedMovies)\r\n    );\r\n    return;\r\n  }\r\n  const filter = parsedMovies.find(({ id }) => id === data.id);\r\n  if (filter) {\r\n    return;\r\n  }\r\n  parsedMovies = [...parsedMovies, data];\r\n  window.localStorage.setItem('favoritesMovies', JSON.stringify(parsedMovies));\r\n}\r\n\r\nexport function deleteFromFavoritesMovies(movies, selectedID) {\r\n  const filteredMovies = movies.filter(({ id }) => id !== selectedID);\r\n  window.localStorage.setItem(\r\n    'favoritesMovies',\r\n    JSON.stringify(filteredMovies)\r\n  );\r\n  return filteredMovies;\r\n}\r\n","export function addToWatchedMovies(data) {\r\n  const savedMovies = localStorage.getItem('watchedMovies');\r\n  let parsedMovies = JSON.parse(savedMovies);\r\n  if (!parsedMovies) {\r\n    parsedMovies = [data];\r\n    window.localStorage.setItem('watchedMovies', JSON.stringify(parsedMovies));\r\n    return;\r\n  }\r\n  const filter = parsedMovies.find(({ id }) => id === data.id);\r\n  if (filter) {\r\n    return;\r\n  }\r\n  parsedMovies = [...parsedMovies, data];\r\n  window.localStorage.setItem('watchedMovies', JSON.stringify(parsedMovies));\r\n}\r\n\r\nexport function deleteFromWatchedMovies(movies, selectedID) {\r\n  const filteredMovies = movies.filter(({ id }) => id !== selectedID);\r\n  window.localStorage.setItem('watchedMovies', JSON.stringify(filteredMovies));\r\n  return filteredMovies;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"15.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"8.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z\"\n}, \"2\")], 'SentimentVeryDissatisfied');\n\nexports.default = _default;"],"names":["styled","motion","children","initial","animate","variants","textVariants","movieData","handleModalToggle","useState","prevLocationState","setPrevLocationState","addedToFavorites","setAddedToFavorites","location","useLocation","movieId","useParams","checkMovieID","savedMovies","localStorage","getItem","parsedMovies","JSON","parse","find","id","useEffect","state","console","log","poster_path","release_date","title","tagline","runtime","overview","budget","genres","GoBackButton","path","from","prevLocation","src","imageNotFound","alt","onClick","addToWatchedMovies","data","addToFavoritesMovies","Star","map","name","to","type","padding","Backdrop","props","theme","backdropColor","textColor","StyledModal","modalBgColor","mainTextFontWeight","modalRoot","document","querySelector","onModal","createPortal","e","target","nodeName","exit","modalVariants","Frame","device","navigate","useNavigate","youtubeURL","useRef","isModalOpen","setisModalOpen","movieTrailer","setMovieTrailer","bool","addMovieTrailer","trailer","sessionStorage","setItem","stringify","fetchMovieTrailers","trailers","officicalTrailer","includes","useQuery","movieDetails","staleTime","cacheTime","error","isLoading","isError","isSuccess","prevMovieId","toast","message","pageInfoVariants","MovieInfo","AnimatePresence","current","key","allow","allowFullScreen","Notify","SentimentVeryDissatisfied","sx","fontSize","mt","window","deleteFromFavoritesMovies","movies","selectedID","filteredMovies","filter","deleteFromWatchedMovies","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}
{"version":3,"file":"static/js/WatchedMoviesPage.1206a4ce.chunk.js","mappings":"gPAAO,IAAMA,EAAe,CAC1BC,KAAM,CAAEC,QAAS,EAAGC,EAAG,EAAGC,WAAY,CAAEC,MAAO,KAC/CC,OAAQ,CAAEJ,QAAS,EAAGC,EAAG,QAGdI,EAAgB,CAC3BN,KAAM,CAAEC,QAAS,EAAGM,MAAO,EAAKC,EAAG,OAAQN,EAAG,QAC9CG,OAAQ,CAAEJ,QAAS,EAAGM,MAAO,GAAKC,EAAG,OAAQN,EAAG,SAGrCO,EAAe,CAC1BT,KAAM,CAAEC,QAAS,EAAGS,OAAQ,QAC5BL,OAAQ,CAAEJ,QAAS,EAAGS,OAAQ,GAC9BC,KAAM,CACJT,EAAGU,OAAOC,YACVZ,QAAS,EACTE,WAAY,CAAEW,SAAU,GAAKV,MAAO,MAI3BW,EAAmB,CAC9Bf,KAAM,CAAEC,QAAS,GACjBI,OAAQ,CAAEJ,QAAS,K,wFCnBRe,EAAOC,EAAAA,EAAAA,GAAH,2ZAQJC,EAAAA,EAAAA,OAKFA,EAAAA,EAAAA,OAQAA,EAAAA,EAAAA,Q,SCfX,EANiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,SAACH,EAAD,UAAOG,M,qDCHnC,I,iDCIMC,EAAYH,EAAAA,EAAAA,IAAH,+CAITI,EAAOJ,EAAAA,EAAAA,IAAH,6jBAqBJ,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,YAErBN,EAAAA,EAAAA,OAMFA,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAKEO,EAAQR,EAAAA,EAAAA,KAAH,6KAOP,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,kBAGnBC,EAAWV,EAAAA,EAAAA,IAAH,4GAQRW,GAAOX,EAAAA,EAAAA,GAAOY,EAAAA,EAAPZ,CAAH,uCACN,qBAAGM,MAAkBG,kB,mBCjBhC,EA3CkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACXC,EAAgDD,EAAhDC,YAAaC,EAAmCF,EAAnCE,MAAOC,EAA4BH,EAA5BG,aAAcC,EAAcJ,EAAdI,UACtCC,EAAa,KAIjB,OAHID,IACFC,EFTwB,SAACC,GAC3B,IAAMC,EAASzB,OAAO0B,aAAaC,QAAQ,gBACrCC,EAAeC,KAAKC,MAAML,GAE5BM,EAAO,KAKX,OAJIH,GAAgBJ,EAASQ,OAAS,IAEpCD,EADaH,EAAaK,MAAK,qBAAGC,KAAgBV,EAAS,MACzCO,MAEbA,EEAQI,CAAab,KAG1B,UAACb,EAAD,YACE,UAACD,EAAD,WACGe,IAAc,SAACV,EAAD,UAAQU,KACvB,gBACEa,IACkB,OAAhBjB,EAAA,yCACsCA,GAClCkB,EAENC,IAAKlB,KAEP,SAACL,EAAD,UACGM,EAAe,IACd,SAACL,EAAD,CACEe,KAAK,YACLQ,MAAOlB,EAAamB,QAAQ,GAAK,EACjCC,UAAQ,EACRC,UAAW,WAKnB,uBAAItB,S,wFCzBV,GANaf,EAAAA,EAAAA,GAAOsC,EAAAA,EAAAA,IAAPtC,CAAH,oF,mBCYV,EAXe,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAH,OACb,SAAC,EAAD,CAAMqC,QAAS,SAAUC,QAAS,OAAQC,SAAU3D,EAAAA,GAApD,SACGoB,M,0MCHQwC,EAAW1C,EAAAA,EAAAA,GAAH,+CAIR2C,GAAS3C,EAAAA,EAAAA,GAAO4C,EAAAA,EAAP5C,CAAH,+LAKR,qBAAGM,MAAkBG,kB,mBC0DhC,EA3DmB,WACjB,OAA4BoC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,MACC,CAACL,IAEJ,IAAMK,EAAY,WAChB,IAAMC,EAAc/B,aAAaC,QAAQ,iBACrC+B,EAAe7B,KAAKC,MAAM2B,GAC9BL,EAAUM,IAYZ,OACE,SAACf,EAAA,MAAD,CACEC,QAAS,SACTC,QAAS,OACT9C,KAAM,OACN+C,SAAUjD,EAAAA,GAJZ,SAMGsD,GACC,SAACQ,EAAA,EAAD,UACGR,EAAOS,KAAI,SAAA1C,GAAK,OACf,UAAC6B,EAAD,YACE,SAACC,EAAD,CAAQa,QAAS,SAAAC,GAAC,OApBV,SAACA,EAAG5B,GAEtB,GADA6B,QAAQC,IAAIF,EAAEG,cAAcC,UACK,WAA7BJ,EAAEG,cAAcC,SAApB,CAGA,IAAMC,GAAiBC,EAAAA,EAAAA,GAAwBjB,EAAQjB,GACvDkB,EAAUe,IAcsBE,CAAYP,EAAG5C,EAAMgB,KAA3C,UACE,SAACoC,EAAA,EAAD,OAEF,SAAC,KAAD,CACEC,GAAE,kBAAarD,EAAMgB,IACrBsC,MAAO,CACLC,KAAM,CACJpB,SAAAA,IAJN,UAQE,SAACqB,EAAA,EAAD,CAAWxD,MAAOA,QAZPA,EAAMgB,UAkBzB,SAACyC,EAAA,EAAD,WACE,eAAIC,MAAO,CAAEC,cAAe,aAA5B,iC,0FC/DH,SAASC,EAAmBC,GACjC,IAAMtB,EAAc/B,aAAaC,QAAQ,iBACrC+B,EAAe7B,KAAKC,MAAM2B,GAC9B,IAAKC,EAGH,OAFAA,EAAe,CAACqB,QAChB/E,OAAO0B,aAAasD,QAAQ,gBAAiBnD,KAAKoD,UAAUvB,IAG/CA,EAAazB,MAAK,qBAAGC,KAAgB6C,EAAK7C,QAIzDwB,EAAY,kBAAOA,GAAP,CAAqBqB,IACjC/E,OAAO0B,aAAasD,QAAQ,gBAAiBnD,KAAKoD,UAAUvB,KAGvD,SAASU,EAAwBjB,EAAQ+B,GAC9C,IAAMf,EAAiBhB,EAAOgC,QAAO,qBAAGjD,KAAgBgD,KAExD,OADAlF,OAAO0B,aAAasD,QAAQ,gBAAiBnD,KAAKoD,UAAUd,IACrDA,I,yBCjBLiB,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJN,EAAQ,EAAUG,G","sources":["animations.js","components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Notify/Notify.styled.jsx","components/Notify/Notify.jsx","pages/WatchedMoviesPage/WatchedMoviesPage.styled.jsx","pages/WatchedMoviesPage/WatchedMoviesPage.jsx","services/watchedMoviesStorageActions.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["export const textVariants = {\r\n  open: { opacity: 1, y: 0, transition: { delay: 0.5 } },\r\n  closed: { opacity: 0, y: '50%' },\r\n};\r\n\r\nexport const modalVariants = {\r\n  open: { opacity: 1, scale: 1.0, x: '-50%', y: '-50%' },\r\n  closed: { opacity: 0, scale: 0.7, x: '-50%', y: '-50%' },\r\n};\r\n\r\nexport const pageVariants = {\r\n  open: { opacity: 1, height: '100%' },\r\n  closed: { opacity: 0, height: 0 },\r\n  exit: {\r\n    y: window.innerHeight,\r\n    opacity: 0,\r\n    transition: { duration: 0.3, delay: 0.3 },\r\n  },\r\n};\r\n\r\nexport const pageInfoVariants = {\r\n  open: { opacity: 1 },\r\n  closed: { opacity: 0 },\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const List = styled.ul`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 15px 0;\r\n\r\n  & > li + li {\r\n    margin-top: 10px;\r\n\r\n    @media ${device.tablet} {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 10px;\r\n    justify-items: center;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { List } from './CardList.styled';\r\n\r\nconst CardList = ({ children }) => <List>{children}</List>;\r\n\r\nCardList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n","export const getGenreName = (genreIds) => {\r\n  const genres = window.localStorage.getItem('moviesGenres');\r\n  const parsedGenres = JSON.parse(genres);\r\n  let movieGenre = null;\r\n  let name = null;\r\n  if (parsedGenres && genreIds.length > 0) {\r\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\r\n    name = movieGenre.name;\r\n  }\r\n  return name\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Rating } from '@mui/material';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 85vw;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n\r\n  & > img {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(29, 29, 29, 0) 0%,\r\n      rgba(29, 29, 29, 0.8) 80.79%\r\n    );\r\n  }\r\n\r\n  & > p {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    @media ${device.tablet} {\r\n      font-weight: 400;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 28vw;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 17vw;\r\n  }\r\n`;\r\n\r\nexport const Genre = styled.span`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 5px;\r\n  background: rgba(29, 29, 29, 0.5);\r\n  border-radius: 0px 8px;\r\n  color: ${props => props.theme.bgElementColor};\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 0;\r\n`;\r\n\r\nexport const Rate = styled(Rating)`\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { getGenreName } from 'services/getGenre';\r\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { poster_path, title, vote_average, genre_ids } = movie;\r\n  let genreNames = null;\r\n  if (genre_ids) {\r\n    genreNames = getGenreName(genre_ids);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        {genreNames && <Genre>{genreNames}</Genre>}\r\n        <img\r\n          src={\r\n            poster_path !== null\r\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\r\n              : imageNotFound\r\n          }\r\n          alt={title}\r\n        />\r\n        <InfoWrap>\r\n          {vote_average > 0 && (\r\n            <Rate\r\n              name=\"read-only\"\r\n              value={vote_average.toFixed(1) / 2}\r\n              readOnly\r\n              precision={0.5}\r\n            />\r\n          )}\r\n        </InfoWrap>\r\n      </Container>\r\n      <p>{title}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from '@emotion/styled';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Wrap = styled(motion.div)`\r\n  width: 100%;\r\n  padding: 10% 20%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default Wrap;\r\n","import PropTypes from 'prop-types';\r\nimport Wrap from './Notify.styled';\r\nimport { textVariants } from 'animations';\r\n\r\nconst Notify = ({ children }) => (\r\n  <Wrap initial={'closed'} animate={'open'} variants={textVariants}>\r\n    {children}\r\n  </Wrap>\r\n);\r\n\r\nNotify.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  padding: PropTypes.string,\r\n};\r\n\r\nexport default Notify;\r\n","import styled from '@emotion/styled';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport const ListItem = styled.li`\r\n  position: relative;\r\n`;\r\n\r\nexport const Button = styled(IconButton)`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 2;\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n  width: 50px;\r\n  height: 50px;\r\n\r\n  & > svg {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { deleteFromWatchedMovies } from 'services/watchedMoviesStorageActions';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CardList from 'components/CardList';\r\nimport MovieCard from 'components/MovieCard';\r\nimport Notify from 'components/Notify';\r\nimport { ListItem, Button } from './WatchedMoviesPage.styled';\r\nimport { pageVariants } from 'animations';\r\n\r\nconst MoviesPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, [movies]);\r\n\r\n  const getMovies = () => {\r\n    const savedMovies = localStorage.getItem('watchedMovies');\r\n    let parsedMovies = JSON.parse(savedMovies);\r\n    setMovies(parsedMovies);\r\n  };\r\n\r\n  const deleteMovie = (e, id) => {\r\n    console.log(e.currentTarget.nodeName);\r\n    if (e.currentTarget.nodeName !== 'BUTTON') {\r\n      return;\r\n    }\r\n    const filteredMovies = deleteFromWatchedMovies(movies, id);\r\n    setMovies(filteredMovies);\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={'closed'}\r\n      animate={'open'}\r\n      exit={'exit'}\r\n      variants={pageVariants}\r\n    >\r\n      {movies ? (\r\n        <CardList>\r\n          {movies.map(movie => (\r\n            <ListItem key={movie.id}>\r\n              <Button onClick={e => deleteMovie(e, movie.id)}>\r\n                <DeleteIcon />\r\n              </Button>\r\n              <Link\r\n                to={`/movies/${movie.id}`}\r\n                state={{\r\n                  from: {\r\n                    location,\r\n                  },\r\n                }}\r\n              >\r\n                <MovieCard movie={movie}></MovieCard>\r\n              </Link>\r\n            </ListItem>\r\n          ))}\r\n        </CardList>\r\n      ) : (\r\n        <Notify>\r\n          <h2 style={{ textTransform: 'uppercase' }}>List is empty</h2>\r\n        </Notify>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","export function addToWatchedMovies(data) {\r\n  const savedMovies = localStorage.getItem('watchedMovies');\r\n  let parsedMovies = JSON.parse(savedMovies);\r\n  if (!parsedMovies) {\r\n    parsedMovies = [data];\r\n    window.localStorage.setItem('watchedMovies', JSON.stringify(parsedMovies));\r\n    return;\r\n  }\r\n  const filter = parsedMovies.find(({ id }) => id === data.id);\r\n  if (filter) {\r\n    return;\r\n  }\r\n  parsedMovies = [...parsedMovies, data];\r\n  window.localStorage.setItem('watchedMovies', JSON.stringify(parsedMovies));\r\n}\r\n\r\nexport function deleteFromWatchedMovies(movies, selectedID) {\r\n  const filteredMovies = movies.filter(({ id }) => id !== selectedID);\r\n  window.localStorage.setItem('watchedMovies', JSON.stringify(filteredMovies));\r\n  return filteredMovies;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["textVariants","open","opacity","y","transition","delay","closed","modalVariants","scale","x","pageVariants","height","exit","window","innerHeight","duration","pageInfoVariants","List","styled","device","children","Container","Card","props","theme","textColor","Genre","bgElementColor","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","localStorage","getItem","parsedGenres","JSON","parse","name","length","find","id","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","motion","initial","animate","variants","ListItem","Button","IconButton","useState","movies","setMovies","location","useLocation","useEffect","getMovies","savedMovies","parsedMovies","CardList","map","onClick","e","console","log","currentTarget","nodeName","filteredMovies","deleteFromWatchedMovies","deleteMovie","Delete","to","state","from","MovieCard","Notify","style","textTransform","addToWatchedMovies","data","setItem","stringify","selectedID","filter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
{"version":3,"file":"static/js/moviePage.998ba0ef.chunk.js","mappings":"oNAGaA,EAAOC,EAAAA,EAAAA,GAAH,2ZAQJC,EAAAA,EAAAA,OAKFA,EAAAA,EAAAA,OAQAA,EAAAA,EAAAA,Q,SCVX,EAViB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACf,SAACH,EAAD,WACE,SAACI,EAAA,EAAD,UAAkBD,Q,qDCNf,I,iDCIME,EAAYJ,EAAAA,EAAAA,IAAH,+CAITK,EAAOL,EAAAA,EAAAA,IAAH,6jBAqBJ,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,YAErBP,EAAAA,EAAAA,OAMFA,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAKEQ,EAAQT,EAAAA,EAAAA,KAAH,6KAOP,SAAAM,GAAK,OAAIA,EAAMC,MAAMG,kBAGnBC,EAAWX,EAAAA,EAAAA,IAAH,4GAQRY,GAAOZ,EAAAA,EAAAA,GAAOa,EAAAA,EAAPb,CAAH,uCACN,qBAAGO,MAAkBG,kB,mBCjBhC,EA3CkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACXC,EAAgDD,EAAhDC,YAAaC,EAAmCF,EAAnCE,MAAOC,EAA4BH,EAA5BG,aAAcC,EAAcJ,EAAdI,UACtCC,EAAa,KAIjB,OAHID,IACFC,EFTwB,SAACC,GAC3B,IAAMC,EAASC,OAAOC,aAAaC,QAAQ,gBACrCC,EAAeC,KAAKC,MAAMN,GAE5BO,EAAO,KAKX,OAJIH,GAAgBL,EAASS,OAAS,IAEpCD,EADaH,EAAaK,MAAK,qBAAGC,KAAgBX,EAAS,MACzCQ,MAEbA,EEAQI,CAAad,KAG1B,UAACb,EAAD,YACE,UAACD,EAAD,WACGe,IAAc,SAACV,EAAD,UAAQU,KACvB,gBACEc,IACkB,OAAhBlB,EAAA,yCACsCA,GAClCmB,EAENC,IAAKnB,KAEP,SAACL,EAAD,UACGM,EAAe,IACd,SAACL,EAAD,CACEgB,KAAK,YACLQ,MAAOnB,EAAaoB,QAAQ,GAAK,EACjCC,UAAQ,EACRC,UAAW,WAKnB,uBAAIvB,S,kMChCGwB,EAAMxC,EAAAA,EAAAA,OAAH,6TAcS,SAAAM,GAAK,OAAIA,EAAMC,MAAMkC,eAGjCC,EAAa1C,EAAAA,EAAAA,KAAH,k9B,mBC0BvB,EAxCkB,SAAC,GAA6B,IAA3B2C,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC7B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,SAACP,EAAD,WACE,UAACE,EAAD,CAAYM,SAZK,SAAAC,GACnBA,EAAEC,iBACFP,EAASG,IAUP,WACE,oBAAQK,KAAK,SAAb,WACE,SAACC,EAAA,EAAD,KACA,yCAGF,kBACED,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,eACZnB,MAAOU,EACPH,SAnBa,SAAAM,GACnB,IAAMO,EAAQP,EAAEQ,OAAOrB,MAAMsB,OAC7BX,EAAcS,IAkBRG,SAAUf,U,oBC/BPgB,EAAc5D,EAAAA,EAAAA,IAAH,6G,oBC+GxB,EAnGmB,SAAC,GAAyB,IAAvB2C,EAAsB,EAAtBA,SAAUkB,EAAY,EAAZA,MAC9B,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAkClB,EAAAA,EAAAA,UAAS,GAA3C,eAAOmB,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAEf,GAAiCC,EAAAA,EAAAA,IAAU,CACzCC,UAAW,KADAC,EAAb,EAAQC,IAAcC,EAAtB,EAAsBA,OAItB,GACEC,EAAAA,EAAAA,kBAAiB,CAAC,cAAe,CAAEd,MAAAA,IAAUe,EAAAA,GAAa,CACxDC,SAAS,EACTC,UAAW,IACXC,UAAW,IACXC,iBAAkB,SAAAC,GAChB,GAAKA,KAGDA,EAAMC,SAAWD,EAAME,YAG3B,OAAOF,EAAMC,YAZXE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,cAAe1C,EAApC,EAAoCA,UAAW2C,EAA/C,EAA+CA,QAASC,EAAxD,EAAwDA,UAAWC,EAAnE,EAAmEA,QA+CnE,OA/BAC,EAAAA,EAAAA,YAAU,WACRpE,OAAOqE,SAAS,CAAEC,IAAK,MACtB,KAEHF,EAAAA,EAAAA,YAAU,WACRpE,OAAOqE,SAAS,CAAEC,IAAK,IACvB7B,EAAU,IACVE,EAAa,GACbwB,IACArB,EAAS,UAAD,OAAWP,MAElB,CAACA,KAEJ6B,EAAAA,EAAAA,YAAU,WACc,IAAlB5B,EAAOjC,QAAgB6C,GACzBY,MAGD,CAACZ,KAEJgB,EAAAA,EAAAA,YAAU,WACJF,GAAS,OAAIJ,QAAJ,IAAIA,GAAAA,EAAMH,MAAMjB,KAC3BD,EAAU,GAAD,eAAKD,IAAL,OAAgBsB,EAAKH,MAAMjB,GAAW6B,WAC/C5B,EAAaD,EAAY,IAEvBuB,GACFO,EAAAA,GAAAA,MAAA,iBAAsBT,EAAMU,SAASX,KAAKY,YAG3C,CAACZ,EAAMG,EAASC,KAGjB,iCACE,UAACS,EAAA,MAAD,CACEC,QAAS,SACTC,QAAS,OACTC,KAAM,OACNC,SAAUC,EAAAA,GAJZ,WAME,SAAC,EAAD,CAAW3D,SAAUA,EAAUC,UAAWA,IACzCA,IAAa,SAAC2D,EAAA,EAAD,IACbzC,EAAOjC,OAAS,IAAMe,IACrB,0BACE,SAAC4D,EAAA,EAAD,UACG1C,EAAO2C,KAAI,SAAA3F,GAAK,OACf,SAACmF,EAAA,KAAD,CACEC,QAAS,SACTC,QAAS,OACTC,KAAM,OACNC,SAAUK,EAAAA,GAJZ,UAOE,SAAC,KAAD,CACEC,GAAE,kBAAa7F,EAAMiB,IACrB6E,MAAO,CACLC,KAAM,CACJ3C,SAAAA,IAJN,UAQE,SAAC4C,EAAA,EAAD,CAAWhG,MAAOA,OAVfA,EAAMiB,eAkBvB,SAAC6B,EAAD,CAAaa,IAAKD,S,qYCzGlBuC,EAAU,gCACVC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAClBH,EADkB,sCACmBC,IAFrC,cACCjB,EADD,yBAIEA,EAASX,KAAKS,SAJhB,kEAOA,SAAesB,IAAtB,4CAAO,OAAP,oBAAO,oGACkBD,IAAAA,IAAA,UAClBH,EADkB,oCACiBC,EADjB,oBADlB,cACCjB,EADD,yBAIEA,EAASX,KAAK/D,QAJhB,kEAOA,SAAe+F,EAAtB,+CAAO,OAAP,oBAAO,gHAAoCC,UAAAA,OAApC,MAAgD,EAAhD,EAAmDC,EAAnD,EAAmDA,SAAnD,UACuBA,EADvB,GACEC,EADF,KACUC,EADV,KACUA,QACfC,QAAQC,IAAIH,GAFP,SAGkBL,IAAAA,IAAA,UAClBH,EADkB,kCACeC,EADf,wBACkCQ,EADlC,iBACkDH,IAJpE,cAGCtB,EAHD,OAMCF,EAAUE,EAASX,KAAKS,QACxBV,EAAaY,EAASX,KAAKuC,YAP5B,kBAQE,CAAE9B,QAAAA,EAASX,SAAUmC,EAAY,EAAGlC,WAAYA,IARlD,kEAWA,SAAeyC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAaC,KAAKC,MAAM,IAAAD,KAAKE,UAA4B,EAD1D,SAEkBd,IAAAA,IAAA,UAClBH,EADkB,wCACqBC,EADrB,gCACgDa,IAHlE,cAEC9B,EAFD,OAKCF,EAAUE,EAASX,KAAKS,QALzB,kBAME,CAAEA,QAAAA,IANJ,kEASA,SAAeoC,EAAtB,+CAAO,OAAP,oBAAO,8GAAqCZ,UAAAA,OAArC,MAAiD,EAAjD,EAAoDC,EAApD,EAAoDA,SAApD,UAEwBA,EAFxB,QAEUY,EAFV,KAEUA,SAFV,SAGkBhB,IAAAA,IAAA,UAClBH,EADkB,iBACFmB,EADE,oBACkBlB,EADlB,gCAC6CK,IAJ/D,cAGCtB,EAHD,OAMCF,EAAUE,EAASX,KAAKS,QACxBV,EAAaY,EAASX,KAAKuC,YAP5B,kBAQE,CAAE9B,QAAAA,EAASX,SAAUmC,EAAY,EAAGlC,WAAYA,IARlD,kEAWA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,4GAA6ByC,UAAAA,OAA7B,MAAyC,EAAzC,EAA4CC,EAA5C,EAA4CA,SAA5C,UACqBA,EADrB,GACEC,EADF,KACU1D,EADV,KACUA,MACf4D,QAAQC,IAAR,UAAeH,IACV1D,EAHA,iEAMkBqD,IAAAA,IAAA,UAClBH,EADkB,gCACaC,EADb,iCACyCnD,EADzC,iBACuDwD,EADvD,yBANlB,cAMCtB,EAND,OASCF,EAAUE,EAASX,KAAKS,QACxBV,EAAaY,EAASX,KAAKuC,YAC5B9B,EAAQhE,QACXiE,EAAAA,GAAAA,KAAW,yBAZR,kBAcE,CAAED,QAAAA,EAASX,SAAUmC,EAAY,EAAGlC,WAAYA,IAdlD,mEAiBA,SAAegD,EAAtB,+CAAO,OAAP,oBAAO,sGAA8Bb,EAA9B,EAA8BA,SAA9B,UACuBA,EADvB,GACEC,EADF,KACUa,EADV,KACUA,QACfX,QAAQC,IAAR,UAAeH,IAFV,kBAIoBL,IAAAA,IAAA,UAClBH,EADkB,iBACFqB,EADE,oBACiBpB,EADjB,oBAJpB,cAIGjB,EAJH,gBAOgBA,EAASX,KAPzB,cAOGA,EAPH,yBAQIA,GARJ,2DAUI,KAAMW,SAASsC,QAVnB,iFA6BA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,sGAA8BhB,EAA9B,EAA8BA,SAA9B,UACuBA,EADvB,GACEC,EADF,KACUgB,EADV,KACUA,QACfd,QAAQC,IAAR,UAAeH,IAFV,kBAIoBL,IAAAA,IAAA,UAClBH,EADkB,kBACDwB,EADC,oBACkBvB,EADlB,oBAJpB,cAIGjB,EAJH,gBAOgBA,EAASX,KAPzB,cAOGA,EAPH,yBAQIA,GARJ,2DAUI,KAAMW,SAASsC,QAVnB,iFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,sGAA8BlB,EAA9B,EAA8BA,SAA9B,UACuBA,EADvB,GACEC,EADF,KACUgB,EADV,KACUA,QACfd,QAAQC,IAAR,UAAeH,IAFV,SAGkBL,IAAAA,IAAA,UAClBH,EADkB,kBACDwB,EADC,kCACgCvB,EADhC,oBAHlB,uBAGG5B,EAHH,EAGGA,KAHH,kBAMEA,GANF,kEASA,SAAeqD,EAAtB,+CAAO,OAAP,oBAAO,oGAA2BnB,EAA3B,EAA2BA,SAA3B,UACuBA,EADvB,GACEC,EADF,KACUa,EADV,KACUA,QACfX,QAAQC,IAAR,UAAeH,IAFV,SAGkBL,IAAAA,IAAA,UAClBH,EADkB,iBACFqB,EADE,4BACyBpB,EADzB,oBAHlB,cAGCjB,EAHD,yBAMEA,EAASX,MANX,kEASA,SAAesD,EAAtB,+CAAO,OAAP,oBAAO,gHAA8BrB,UAAAA,OAA9B,MAA0C,EAA1C,EAA6CC,EAA7C,EAA6CA,SAA7C,UACuBA,EADvB,GACEC,EADF,KACUa,EADV,KACUA,QACfX,QAAQC,IAAR,UAAeH,IAFV,SAGkBL,IAAAA,IAAA,UAClBH,EADkB,iBACFqB,EADE,4BACyBpB,EADzB,2BAHlB,cAGCjB,EAHD,OAMCF,EAAUE,EAASX,KAAKS,QACxBV,EAAaY,EAASX,KAAKuC,YAP5B,kBAQE,CAAE9B,QAAAA,EAASX,SAAUmC,EAAY,EAAGlC,WAAYA,IARlD,kEAWA,SAAewD,EAAtB,+CAAO,OAAP,oBAAO,WAAkCP,GAAlC,uFACkBlB,IAAAA,IAAA,UAClBH,EADkB,iBACFqB,EADE,2BACwBpB,EADxB,oBADlB,cACCjB,EADD,yBAIEA,EAASX,KAAKS,SAJhB,oE","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesIDBService.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const List = styled.ul`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 15px 0;\r\n\r\n  & > li + li {\r\n    margin-top: 10px;\r\n\r\n    @media ${device.tablet} {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 10px;\r\n    justify-items: center;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { List } from './CardList.styled';\r\n\r\nconst CardList = ({ children }) => (\r\n  <List>\r\n    <AnimatePresence>{children}</AnimatePresence>\r\n  </List>\r\n);\r\n\r\nCardList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n","export const getGenreName = (genreIds) => {\r\n  const genres = window.localStorage.getItem('moviesGenres');\r\n  const parsedGenres = JSON.parse(genres);\r\n  let movieGenre = null;\r\n  let name = null;\r\n  if (parsedGenres && genreIds.length > 0) {\r\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\r\n    name = movieGenre.name;\r\n  }\r\n  return name\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Rating } from '@mui/material';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 85vw;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n\r\n  & > img {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(29, 29, 29, 0) 0%,\r\n      rgba(29, 29, 29, 0.8) 80.79%\r\n    );\r\n  }\r\n\r\n  & > p {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    @media ${device.tablet} {\r\n      font-weight: 400;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 28vw;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 17vw;\r\n  }\r\n`;\r\n\r\nexport const Genre = styled.span`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 5px;\r\n  background: rgba(29, 29, 29, 0.5);\r\n  border-radius: 0px 8px;\r\n  color: ${props => props.theme.bgElementColor};\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 0;\r\n`;\r\n\r\nexport const Rate = styled(Rating)`\r\n  color: ${({ theme }) => theme.bgElementColor};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { getGenreName } from 'services/getGenre';\r\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\r\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { poster_path, title, vote_average, genre_ids } = movie;\r\n  let genreNames = null;\r\n  if (genre_ids) {\r\n    genreNames = getGenreName(genre_ids);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Container>\r\n        {genreNames && <Genre>{genreNames}</Genre>}\r\n        <img\r\n          src={\r\n            poster_path !== null\r\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\r\n              : imageNotFound\r\n          }\r\n          alt={title}\r\n        />\r\n        <InfoWrap>\r\n          {vote_average > 0 && (\r\n            <Rate\r\n              name=\"read-only\"\r\n              value={vote_average.toFixed(1) / 2}\r\n              readOnly\r\n              precision={0.5}\r\n            />\r\n          )}\r\n        </InfoWrap>\r\n      </Container>\r\n      <p>{title}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Bar = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 10;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  /* background-color: ${props => props.theme.bgSearchBar}; */\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  & > input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n  & > input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n  & > button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  & > button:hover,\r\n  button:focus {\r\n    opacity: 1;\r\n  }\r\n  & span {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  & svg {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { SearchForm, Bar } from './Searchbar.styled';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst Searchbar = ({ onChange, isLoading }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onChange(inputValue);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const input = e.target.value.trim();\r\n    setInputValue(input);\r\n  };\r\n\r\n  return (\r\n    <Bar>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <button type=\"submit\">\r\n          <SearchIcon />\r\n          <span>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movie\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          disabled={isLoading}\r\n        />\r\n      </SearchForm>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Searchbar;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FetchMarker = styled.div`\r\n  position: absolute;\r\n  bottom: 500px;\r\n  right: 0;\r\n  width: 5px;\r\n  height: 5px;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { useInfiniteQuery } from 'react-query';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { toast } from 'react-toastify';\r\nimport { motion } from 'framer-motion';\r\nimport { searchMovie } from '../../services/moviesIDBService';\r\nimport Searchbar from 'components/Searchbar';\r\nimport CardList from 'components/CardList';\r\nimport MovieCard from 'components/MovieCard';\r\nimport { FetchMarker } from './MoviesPage.styled';\r\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\r\nimport { pageVariants, textVariants } from 'animations';\r\n\r\nconst MoviesPage = ({ onChange, query }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  const { ref: ListRef, inView } = useInView({\r\n    threshold: 0.1,\r\n  });\r\n\r\n  const { data, error, fetchNextPage, isLoading, isError, isSuccess, refetch } =\r\n    useInfiniteQuery(['searchMovie', { query }], searchMovie, {\r\n      enabled: false,\r\n      staleTime: 60000,\r\n      cacheTime: 60000,\r\n      getNextPageParam: pages => {\r\n        if (!pages) {\r\n          return;\r\n        }\r\n        if (pages.nextPage > pages.totalPages) {\r\n          return undefined;\r\n        }\r\n        return pages.nextPage;\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0 });\r\n    setMovies([]);\r\n    setPageIndex(0);\r\n    refetch();\r\n    navigate(`?query=${query}`);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (movies.length !== 0 && inView) {\r\n      fetchNextPage();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [inView]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess && data?.pages[pageIndex]) {\r\n      setMovies([...movies, ...data.pages[pageIndex].results]);\r\n      setPageIndex(pageIndex + 1);\r\n    }\r\n    if (isError) {\r\n      toast.error(`Error: ${error.response.data.message}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, isError, isSuccess]);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={'closed'}\r\n        animate={'open'}\r\n        exit={'exit'}\r\n        variants={pageVariants}\r\n      >\r\n        <Searchbar onChange={onChange} isLoading={isLoading} />\r\n        {isLoading && <GallerySkeleton />}\r\n        {movies.length > 0 && !isLoading && (\r\n          <div>\r\n            <CardList>\r\n              {movies.map(movie => (\r\n                <motion.li\r\n                  initial={'closed'}\r\n                  animate={'open'}\r\n                  exit={'exit'}\r\n                  variants={textVariants}\r\n                  key={movie.id}\r\n                >\r\n                  <Link\r\n                    to={`/movies/${movie.id}`}\r\n                    state={{\r\n                      from: {\r\n                        location,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MovieCard movie={movie}></MovieCard>\r\n                  </Link>\r\n                </motion.li>\r\n              ))}\r\n            </CardList>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n      <FetchMarker ref={ListRef}></FetchMarker>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst baseURL = 'https://api.themoviedb.org/3/';\r\nconst key = '105ba628fde77462ee84526f3393a31c';\r\n\r\nexport async function fetchTrendmovies() {\r\n  const response = await axios.get(\r\n    `${baseURL}trending/movie/day?api_key=${key}`\r\n  );\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchMoviesGenres() {\r\n  const response = await axios.get(\r\n    `${baseURL}genre/movie/list?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.genres;\r\n}\r\n\r\nexport async function fetchMoviesByGenre({ pageParam = 1, queryKey }) {\r\n  const [_key, { genreId }] = queryKey;\r\n  console.log(_key);\r\n  const response = await axios.get(\r\n    `${baseURL}discover/movie?api_key=${key}&with_genres=${genreId}&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchSimilarMovies() {\r\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\r\n  const response = await axios.get(\r\n    `${baseURL}movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\r\n  );\r\n  const results = response.data.results;\r\n  return { results };\r\n}\r\n\r\nexport async function fetchCategoryMovies({ pageParam = 1, queryKey }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_key, { category }] = queryKey;\r\n  const response = await axios.get(\r\n    `${baseURL}movie/${category}?api_key=${key}&language=en-US&page=${pageParam}`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function searchMovie({ pageParam = 1, queryKey }) {\r\n  const [_key, { query }] = queryKey;\r\n  console.log(`${_key}`);\r\n  if (!query) {\r\n    return;\r\n  }\r\n  const response = await axios.get(\r\n    `${baseURL}search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  if (!results.length) {\r\n    toast.info('Movies were not found');\r\n  }\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function movieDetails({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `${baseURL}movie/${movieId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function similarMovies({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `${baseURL}movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\r\n    );\r\n    const results = response.data.results;\r\n    const totalPages = response.data.total_pages;\r\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function actorDetails({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  try {\r\n    const response = await axios.get(\r\n      `${baseURL}person/${actorId}?api_key=${key}&language=en-US`\r\n    );\r\n    const data = await response.data;\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.status;\r\n  }\r\n}\r\n\r\nexport async function filmsByActor({ queryKey }) {\r\n  const [_key, { actorId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const { data } = await axios.get(\r\n    `${baseURL}person/${actorId}/movie_credits?api_key=${key}&language=en-US`\r\n  );\r\n  return data;\r\n}\r\n\r\nexport async function movieCast({ queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `${baseURL}movie/${movieId}/credits?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function movieReviews({ pageParam = 1, queryKey }) {\r\n  const [_key, { movieId }] = queryKey;\r\n  console.log(`${_key}`);\r\n  const response = await axios.get(\r\n    `${baseURL}movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\r\n  );\r\n  const results = response.data.results;\r\n  const totalPages = response.data.total_pages;\r\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\r\n}\r\n\r\nexport async function fetchMovieTrailers(movieId) {\r\n  const response = await axios.get(\r\n    `${baseURL}movie/${movieId}/videos?api_key=${key}&language=en-US`\r\n  );\r\n  return response.data.results;\r\n}\r\n"],"names":["List","styled","device","children","AnimatePresence","Container","Card","props","theme","textColor","Genre","bgElementColor","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","window","localStorage","getItem","parsedGenres","JSON","parse","name","length","find","id","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","Bar","bgSearchBar","SearchForm","onChange","isLoading","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","Search","autoComplete","autoFocus","placeholder","input","target","trim","disabled","FetchMarker","query","movies","setMovies","pageIndex","setPageIndex","location","useLocation","navigate","useNavigate","useInView","threshold","ListRef","ref","inView","useInfiniteQuery","searchMovie","enabled","staleTime","cacheTime","getNextPageParam","pages","nextPage","totalPages","data","error","fetchNextPage","isError","isSuccess","refetch","useEffect","scrollTo","top","results","toast","response","message","motion","initial","animate","exit","variants","pageVariants","GallerySkeleton","CardList","map","textVariants","to","state","from","MovieCard","baseURL","key","fetchTrendmovies","axios","fetchMoviesGenres","fetchMoviesByGenre","pageParam","queryKey","_key","genreId","console","log","total_pages","fetchSimilarMovies","pageNumber","Math","floor","random","fetchCategoryMovies","category","movieDetails","movieId","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers"],"sourceRoot":""}
{"version":3,"file":"static/js/TopRatedMoviesPage.109f70b9.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","components/Loaders/GallerySkeleton.styled.jsx","components/Loaders/GallerySkeleton.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/TopRatedMoviesPage/TopRatedMoviesPage.styled.jsx","pages/TopRatedMoviesPage/TopRatedMoviesPage.jsx","services/moviesApi.jsx","../node_modules/@mui/icons-material/KeyboardBackspace.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","import styled from '@emotion/styled';\nimport IconButton from '@mui/material/IconButton';\n\nconst Wrap = styled(IconButton)`\n  display: block;\n  color: ${({ theme }) => theme.bgElementColor};\n  width: 60px;\n  height: 60px;\n\n  & > svg {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport default Wrap;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport Wrap from './GoBackButton.styled';\n\nconst GoBackButton = ({ path, state }) => (\n  <Link to={path} state={{ state }}>\n    <Wrap>\n      <KeyboardBackspaceIcon />\n    </Wrap>\n  </Link>\n);\n\nGoBackButton.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      location: PropTypes.object,\n    }),\n  }),\n};\n\nexport default GoBackButton;\n","import styled from '@emotion/styled';\nimport { Skeleton } from '@mui/material';\n\nexport const Wrap = styled.div`\n  width: 100%;\n`;\n\nexport const SkeletonRectangle = styled(Skeleton)`\n  width: 100%;\n  height: 300px;\n`;\n\nexport const SkeletonText = styled(Skeleton)`\n  width: 100%;\n  height: 30px;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 40px 15px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  column-gap: 20px;\n  row-gap: 40px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import React from 'react';\nimport {\n  Wrap,\n  SkeletonRectangle,\n  SkeletonText,\n  Container,\n} from './GallerySkeleton.styled';\n\nconst SkeletonWrap = () => (\n  <Wrap>\n    <SkeletonRectangle variant=\"rectangular\" animation=\"wave\" />\n    <SkeletonText variant=\"text\" animation=\"wave\" />\n  </Wrap>\n);\n\nconst GallerySkeleton = () => {\n  return (\n    <Container>\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n    </Container>\n  );\n};\n\nexport default GallerySkeleton;\n","import styled from '@emotion/styled';\nimport { Rating } from '@mui/material';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const Card = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    min-height: 485px;\n    background: linear-gradient(\n      180deg,\n      rgba(29, 29, 29, 0) 0%,\n      rgba(29, 29, 29, 0.8) 80.79%\n    );\n  }\n\n  & > p {\n    margin-top: 10px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: ${props => props.theme.textColor};\n  }\n`;\n\nexport const Genre = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 5px;\n  background: rgba(29, 29, 29, 0.5);\n  border-radius: 0px 8px;\n  color: ${props => props.theme.bgElementColor};\n`;\n\nexport const InfoWrap = styled.div`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  bottom: 5px;\n  left: 0;\n`;\n\nexport const Rate = styled(Rating)`\n  color: ${({ theme }) => theme.bgElementColor};\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, title, vote_average, genre_ids } = movie;\n  const genres = window.localStorage.getItem('moviesGenres');\n  const parsedGenres = JSON.parse(genres);\n  let movieGenre = null;\n  let name = null;\n  if (parsedGenres && genre_ids.length > 0) {\n    movieGenre = parsedGenres.find(({ id }) => id === genre_ids[0]);\n    console.log(genre_ids);\n    console.log(movieGenre);\n    name = movieGenre.name;\n  }\n\n  return (\n    <Card>\n      <Container>\n        <Genre>{name}</Genre>\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\n              : imageNotFound\n          }\n          alt={title}\n        />\n        <InfoWrap>\n          {vote_average > 0 && (\n            <Rate\n              name=\"read-only\"\n              value={vote_average.toFixed(1) / 2}\n              readOnly\n              precision={0.5}\n            />\n          )}\n        </InfoWrap>\n      </Container>\n      <p>{title}</p>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genre_ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 95vw;\n  margin: 0 auto;\n`;\n\nexport const FetchMarker = styled.div`\n  width: 5px;\n  height: 5px;\n`;\n","import { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useInfiniteQuery } from 'react-query';\nimport { useInView } from 'react-intersection-observer';\nimport { toast } from 'react-toastify';\nimport { fetchTopRatedMovies } from '../../services/moviesApi';\nimport CardList from 'components/CardList';\nimport MovieCard from 'components/MovieCard';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\nimport { Container, FetchMarker } from './TopRatedMoviesPage.styled';\n\nconst TopRatedMoviesPage = () => {\n  const location = useLocation();\n\n  const { ref: ListRef, inView } = useInView({\n    threshold: 0.1,\n  });\n\n  const { data, error, fetchNextPage, isLoading, isError, isSuccess } =\n    useInfiniteQuery(['topRatedMovies'], fetchTopRatedMovies, {\n      staleTime: 60000,\n      cacheTime: 60000,\n      getNextPageParam: pages => {\n        if (pages.nextPage > pages.totalPages) {\n          return undefined;\n        }\n        return pages.nextPage;\n      },\n    });\n\n  useEffect(() => {\n    if (inView) {\n      fetchNextPage();\n    }\n  }, [fetchNextPage, inView]);\n\n  if (isLoading && data) {\n    return <GallerySkeleton />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  console.log(data);\n\n  return (\n    <Container>\n      <GoBackButton path={'/'} />\n      {isSuccess && (\n        <>\n          {data.pages.map(({ results, nextPage }) => (\n            <CardList key={`id${nextPage}`}>\n              {results.map(movie => (\n                <li key={movie.id}>\n                  <Link\n                    to={`/movies/${movie.id}`}\n                    state={{\n                      from: {\n                        location,\n                      },\n                    }}\n                  >\n                    <MovieCard movie={movie}></MovieCard>\n                  </Link>\n                </li>\n              ))}\n            </CardList>\n          ))}\n        </>\n      )}\n      <FetchMarker ref={ListRef}></FetchMarker>\n    </Container>\n  );\n};\n\nexport default TopRatedMoviesPage;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesGenres() {\n  const response = await axios.get(\n    `genre/movie/list?api_key=${key}&language=en-US`\n  );\n  return response.data.genres;\n}\n\nexport async function fetchSimilarMovies() {\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\n  const response = await axios.get(\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\n  );\n  const results = response.data.results;\n  return { results };\n}\n\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function similarMovies({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\n\nexports.default = _default;"],"names":["List","styled","children","IconButton","theme","bgElementColor","path","state","to","KeyboardBackspace","Wrap","SkeletonRectangle","Skeleton","SkeletonText","Container","SkeletonWrap","variant","animation","Card","props","textColor","Genre","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genres","window","localStorage","getItem","parsedGenres","JSON","parse","movieGenre","name","length","find","id","console","log","src","imageNotFound","alt","value","toFixed","readOnly","precision","FetchMarker","location","useLocation","useInView","threshold","ListRef","ref","inView","useInfiniteQuery","fetchTopRatedMovies","staleTime","cacheTime","getNextPageParam","pages","nextPage","totalPages","data","error","fetchNextPage","isLoading","isError","isSuccess","useEffect","GallerySkeleton","toast","message","GoBackButton","map","results","CardList","from","MovieCard","axios","key","fetchTrendmovies","response","fetchMoviesGenres","fetchSimilarMovies","pageNumber","Math","floor","random","pageParam","total_pages","fetchUpcomingMovies","searchMovie","queryKey","_key","query","movieDetails","movieId","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
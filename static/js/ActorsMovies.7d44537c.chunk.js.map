{"version":3,"file":"static/js/ActorsMovies.7d44537c.chunk.js","mappings":"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","sources":["components/ActorInfo/ActorInfo.styled.jsx","components/ActorsMovies/ActorsMovies.styled.jsx","components/ActorsMovies/ActorsMovies.jsx","components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/Loaders/GallerySkeleton.styled.jsx","components/Loaders/GallerySkeleton.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px 0;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n\n  & img {\n    width: 400px;\n    height: auto;\n  }\n`;\n\nexport const Button = styled(Link)`\n  display: block;\n  width: 200px;\n  padding: 15px;\n  border-radius: 5px;\n  font-family: sans-serif;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${props => props.theme.elementColor};\n  background-color: ${props => props.theme.bgElementColor};\n  transition: background-color ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n  }\n`;\n","import styled from 'styled-components';\nimport { Button } from '../ActorInfo/ActorInfo.styled';\n\nexport const GalleryButton = styled(Button)`\n  margin-top: 10px;\n`;\n","import { Link, useParams, useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { filmsByActor } from 'services/api';\nimport CardList from 'components/CardList';\nimport MovieCard from 'components/MovieCard';\nimport { GalleryButton } from './ActorsMovies.styled';\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\n\nconst ActorsMovies = () => {\n  const { actorId } = useParams();\n  const location = useLocation();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['filmsByActor', { actorId }],\n    filmsByActor,\n    {\n      staleTime: 60000,\n      cacheTime: 60000,\n    }\n  );\n\n  if (isLoading && data) {\n    return <GallerySkeleton />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  return (\n    <>\n      {isSuccess && data && (\n        <>\n          <GalleryButton to={location?.state?.from?.location ?? '/'}>\n            {location?.state?.from?.label ?? 'Go back'}\n          </GalleryButton>\n          <CardList>\n            {data.cast.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>\n                  <MovieCard movie={movie}></MovieCard>\n                </Link>\n              </li>\n            ))}\n          </CardList>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ActorsMovies;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding: 15px 0;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { Container } from './GallerySkeleton.styled';\n\nconst Skeleton = props => (\n  <ContentLoader\n    speed={2}\n    width={400}\n    height={460}\n    viewBox=\"0 0 400 460\"\n    style={{ width: '100%', height: 'auto' }}\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"110\" y=\"466\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n    <rect x=\"32\" y=\"-24\" rx=\"0\" ry=\"0\" width=\"384\" height=\"400\" />\n    <rect x=\"32\" y=\"400\" rx=\"0\" ry=\"0\" width=\"392\" height=\"31\" />\n  </ContentLoader>\n);\n\nconst GallerySkeleton = () => {\n  return (\n    <Container>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </Container>\n  );\n};\n\nexport default GallerySkeleton;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    min-height: 485px;\n  }\n\n  & > div {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 60px;\n    display: flex;\n    padding: 5px;\n    justify-content: space-around;\n    align-items: center;\n    background-color: #e2d5d5a6;\n    border-radius: 10px;\n    object-fit: cover;\n  }\n\n  & > div > p {\n    font-weight: 500;\n    color: ${props => props.theme.textColor};\n  }\n\n  & > p {\n    margin-top: 10px;\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${props => props.theme.textColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Card } from './MovieCard.styled';\nimport { BsFillStarFill } from 'react-icons/bs';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, original_title, vote_average } = movie;\n\n  return (\n    <Card>\n      <img\n        src={\n          poster_path !== null\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : imageNotFound\n        }\n        alt={original_title}\n      ></img>\n      <p>{original_title}</p>\n      <div>\n        <BsFillStarFill size=\"20px\" color=\"gold\" />\n        <p>{vote_average.toFixed(1)}</p>\n      </div>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (query !== '') {\n    const response = await axios.get(\n      `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    if (!results.length) {\n      toast.info('Movies were not found');\n      return null;\n    }\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  }\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `person/${actorId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(actorId);\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n"],"names":["Container","styled","InfoContainer","Button","Link","props","theme","elementColor","bgElementColor","hoverTransition","hoverTimeFunction","bgElementHoverColor","GalleryButton","actorId","useParams","location","useLocation","useQuery","filmsByActor","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","GallerySkeleton","toast","message","to","state","from","label","CardList","cast","map","movie","id","MovieCard","List","children","Skeleton","speed","width","height","viewBox","style","backgroundColor","foregroundColor","x","y","rx","ry","Card","textColor","poster_path","original_title","vote_average","src","imageNotFound","alt","size","color","toFixed","axios","key","fetchTrendmovies","response","results","searchMovie","pageParam","queryKey","_key","query","console","log","totalPages","total_pages","length","nextPage","movieDetails","movieId","actorDetails","movieCast","movieReviews","fetchMovieTrailers"],"sourceRoot":""}
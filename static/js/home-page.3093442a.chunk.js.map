{"version":3,"file":"static/js/home-page.3093442a.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/Loaders/GallerySkeleton.styled.jsx","components/Loaders/GallerySkeleton.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/HomePage/HomePage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding: 15px 0;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { Container } from './GallerySkeleton.styled';\n\nconst Skeleton = props => (\n  <ContentLoader\n    speed={2}\n    width={400}\n    height={460}\n    viewBox=\"0 0 400 460\"\n    style={{ width: '100%', height: 'auto' }}\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"110\" y=\"466\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n    <rect x=\"32\" y=\"-24\" rx=\"0\" ry=\"0\" width=\"384\" height=\"400\" />\n    <rect x=\"32\" y=\"400\" rx=\"0\" ry=\"0\" width=\"392\" height=\"31\" />\n  </ContentLoader>\n);\n\nconst GallerySkeleton = () => {\n  return (\n    <Container>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </Container>\n  );\n};\n\nexport default GallerySkeleton;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    min-height: 485px;\n  }\n\n  & > div {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 60px;\n    display: flex;\n    padding: 5px;\n    justify-content: space-around;\n    align-items: center;\n    background-color: #e2d5d5a6;\n    border-radius: 10px;\n    object-fit: cover;\n  }\n\n  & > div > p {\n    font-weight: 500;\n    color: ${props => props.theme.textColor};\n  }\n\n  & > p {\n    margin-top: 10px;\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${props => props.theme.textColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Card } from './MovieCard.styled';\nimport { BsFillStarFill } from 'react-icons/bs';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, original_title, vote_average } = movie;\n\n  return (\n    <Card>\n      <img\n        src={\n          poster_path !== null\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : imageNotFound\n        }\n        alt={original_title}\n      ></img>\n      <p>{original_title}</p>\n      <div>\n        <BsFillStarFill size=\"20px\" color=\"gold\" />\n        <p>{vote_average.toFixed(1)}</p>\n      </div>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchTrendmovies } from 'services/api';\nimport MovieCard from 'components/MovieCard';\nimport CardList from 'components/CardList';\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\n\nconst HomePage = () => {\n  const { data, isError, isLoading, isSuccess, error } = useQuery(\n    'topMovies',\n    fetchTrendmovies,\n    {\n      staleTime: 60000,\n      cacheTime: 60000,\n    }\n  );\n\n  if (isLoading) {\n    return <GallerySkeleton />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess) {\n    return (\n      <CardList>\n        {data.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <MovieCard movie={movie}></MovieCard>\n            </Link>\n          </li>\n        ))}\n      </CardList>\n    );\n  }\n};\n\nexport default HomePage;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n"],"names":["List","styled","children","Container","Skeleton","props","speed","width","height","viewBox","style","backgroundColor","foregroundColor","x","y","rx","ry","Card","theme","textColor","movie","poster_path","original_title","vote_average","src","imageNotFound","alt","size","color","toFixed","useQuery","fetchTrendmovies","staleTime","cacheTime","data","isError","isLoading","isSuccess","error","GallerySkeleton","toast","message","CardList","map","to","id","MovieCard","axios","key","response","results","searchMovie","pageParam","queryKey","_key","query","console","log","totalPages","total_pages","length","nextPage","movieDetails","movieId","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers"],"sourceRoot":""}
{"version":3,"file":"static/js/cast.9f59f7e5.chunk.js","mappings":"kPAkCA,EA5Ba,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAuDE,EAAAA,EAAAA,UACrD,CAAC,YAAa,CAAEF,QAAAA,IAChBG,EAAAA,GACA,CAAEC,UAAW,IAAOC,UAAW,MAHzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,UAMzC,OAAIF,GACK,SAAC,IAAD,IAGLC,EACKE,EAAAA,GAAAA,MAAA,gDAAuBJ,EAAMK,UAGlCF,GAEA,wBACGJ,EAAKO,KAAKC,KAAI,SAAAC,GAAK,OAClB,uBAAmBA,EAAMC,MAAjBD,EAAME,cAJtB","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { movieCast } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['movieCast', { movieId }],\n    movieCast,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess) {\n    return (\n      <ul>\n        {data.cast.map(actor => (\n          <p key={actor.id}>{actor.name}</p>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","useQuery","movieCast","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","toast","message","cast","map","actor","name","id"],"sourceRoot":""}
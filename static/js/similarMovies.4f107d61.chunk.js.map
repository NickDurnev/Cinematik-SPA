{"version":3,"file":"static/js/similarMovies.4f107d61.chunk.js","mappings":"6PAqCA,EA9BsB,WACpB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAuDC,EAAAA,EAAAA,UACrD,CAAC,gBAAiB,CAAEJ,QAAAA,IACpBK,EAAAA,GACA,CAAEC,UAAW,IAAOC,UAAW,MAHzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,UAMzC,GAAIF,EACF,OAAO,SAAC,IAAD,IAGT,GAAIC,EACF,OAAOE,EAAAA,GAAAA,MAAA,gDAAuBJ,EAAMK,UAGtCC,QAAQC,IAAIR,GAEZ,IAAQS,EAAYT,EAAZS,QAER,OAAIL,GAAaJ,EACQ,IAAnBS,EAAQC,QACH,yEAEF,SAACC,EAAA,EAAD,CAAQC,OAAQH,EAASf,SAAUA,EAAUmB,YAAU,SAJhE","sources":["components/SimilarMovies/SimilarMovies.jsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { fetchSimilarMovies } from 'services/moviesApi';\nimport Swiper from 'components/Swiper';\n\nconst SimilarMovies = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['similarMovies', { movieId }],\n    fetchSimilarMovies,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  console.log(data);\n\n  const { results } = data;\n\n  if (isSuccess && data) {\n    if (results.length === 0) {\n      return <h2>We don't have similar movies for this movie</h2>;\n    }\n    return <Swiper movies={results} location={location} onAutoPlay />;\n  }\n};\n\nexport default SimilarMovies;\n"],"names":["movieId","useParams","location","useLocation","useQuery","fetchSimilarMovies","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","toast","message","console","log","results","length","Swiper","movies","onAutoPlay"],"sourceRoot":""}
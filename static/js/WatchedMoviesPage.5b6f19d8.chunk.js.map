{"version":3,"file":"static/js/WatchedMoviesPage.5b6f19d8.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/WatchedMoviesPage/WatchedMoviesPage.styled.jsx","pages/WatchedMoviesPage/WatchedMoviesPage.jsx","services/watchedMoviesStorageActions.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { device } from 'deviceSizes';\n\nexport const List = styled.ul`\n  width: 100%;\n  display: block;\n  padding: 10px 0;\n\n  @media ${device.tablet} {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 10px;\n    justify-items: center;\n    align-items: stretch;\n  }\n\n  @media ${device.laptop} {\n    grid-template-columns: repeat(5, 1fr);\n    gap: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","export const getGenreName = (genreIds) => {\n  const genres = window.localStorage.getItem('moviesGenres');\n  const parsedGenres = JSON.parse(genres);\n  let movieGenre = null;\n  let name = null;\n  if (parsedGenres && genreIds.length > 0) {\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\n    name = movieGenre.name;\n  }\n  return name\n}\n","import styled from '@emotion/styled';\nimport { Rating } from '@mui/material';\nimport { device } from 'deviceSizes';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const Card = styled.div`\n  width: 85vw;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    width: 100%;\n    min-height: 100%;\n    background: linear-gradient(\n      180deg,\n      rgba(29, 29, 29, 0) 0%,\n      rgba(29, 29, 29, 0.8) 80.79%\n    );\n  }\n\n  & > p {\n    width: 100%;\n    margin-top: 10px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: ${props => props.theme.textColor};\n\n    @media ${device.tablet} {\n      font-weight: 400;\n      font-size: 18px;\n    }\n  }\n\n  @media ${device.tablet} {\n    width: 28vw;\n  }\n\n  @media ${device.laptop} {\n    width: 17vw;\n  }\n`;\n\nexport const Genre = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 5px;\n  background: rgba(29, 29, 29, 0.5);\n  border-radius: 0px 8px;\n  color: ${props => props.theme.bgElementColor};\n`;\n\nexport const InfoWrap = styled.div`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  bottom: 5px;\n  left: 0;\n`;\n\nexport const Rate = styled(Rating)`\n  color: ${({ theme }) => theme.bgElementColor};\n`;\n","import PropTypes from 'prop-types';\nimport { getGenreName } from 'services/getGenre';\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, title, vote_average, genre_ids } = movie;\n  let genreNames = null;\n  if (genre_ids) {\n    genreNames = getGenreName(genre_ids);\n  }\n  return (\n    <Card>\n      <Container>\n        {genreNames && <Genre>{genreNames}</Genre>}\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\n              : imageNotFound\n          }\n          alt={title}\n        />\n        <InfoWrap>\n          {vote_average > 0 && (\n            <Rate\n              name=\"read-only\"\n              value={vote_average.toFixed(1) / 2}\n              readOnly\n              precision={0.5}\n            />\n          )}\n        </InfoWrap>\n      </Container>\n      <p>{title}</p>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport IconButton from '@mui/material/IconButton';\n\nexport const ListItem = styled.li`\n  position: relative;\n`;\n\nexport const Button = styled(IconButton)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  color: ${({ theme }) => theme.bgElementColor};\n  width: 50px;\n  height: 50px;\n\n  & > svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { deleteFromWatchedMovies } from 'services/watchedMoviesStorageActions';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CardList from 'components/CardList';\nimport MovieCard from 'components/MovieCard';\nimport { ListItem, Button } from './WatchedMoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovies();\n  }, [movies]);\n\n  const getMovies = () => {\n    const savedMovies = localStorage.getItem('watchedMovies');\n    let parsedMovies = JSON.parse(savedMovies);\n    setMovies(parsedMovies);\n  };\n\n  const deleteMovie = (e, id) => {\n    console.log(e.currentTarget.nodeName);\n    if (e.currentTarget.nodeName !== 'BUTTON') {\n      return;\n    }\n    const filteredMovies = deleteFromWatchedMovies(movies, id);\n    setMovies(filteredMovies);\n  };\n\n  return (\n    <>\n      {movies ? (\n        <CardList>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <Button onClick={e => deleteMovie(e, movie.id)}>\n                <DeleteIcon />\n              </Button>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{\n                  from: {\n                    location,\n                  },\n                }}\n              >\n                <MovieCard movie={movie}></MovieCard>\n              </Link>\n            </ListItem>\n          ))}\n        </CardList>\n      ) : (\n        <h2>List is empty</h2>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","export function addToWatchedMovies(data) {\n  const savedMovies = localStorage.getItem('watchedMovies');\n  let parsedMovies = JSON.parse(savedMovies);\n  if (!parsedMovies) {\n    parsedMovies = [data];\n    window.localStorage.setItem('watchedMovies', JSON.stringify(parsedMovies));\n    return;\n  }\n  const filter = parsedMovies.find(({ id }) => id === data.id);\n  if (filter) {\n    return;\n  }\n  parsedMovies = [...parsedMovies, data];\n  window.localStorage.setItem('watchedMovies', JSON.stringify(parsedMovies));\n}\n\nexport function deleteFromWatchedMovies(movies, selectedID) {\n  const filteredMovies = movies.filter(({ id }) => id !== selectedID);\n  window.localStorage.setItem('watchedMovies', JSON.stringify(filteredMovies));\n  return filteredMovies;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["List","styled","device","children","Container","Card","props","theme","textColor","Genre","bgElementColor","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","window","localStorage","getItem","parsedGenres","JSON","parse","name","length","find","id","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","ListItem","Button","IconButton","useState","movies","setMovies","location","useLocation","useEffect","getMovies","savedMovies","parsedMovies","CardList","map","onClick","e","console","log","currentTarget","nodeName","filteredMovies","deleteFromWatchedMovies","deleteMovie","Delete","to","state","from","MovieCard","addToWatchedMovies","data","setItem","stringify","selectedID","filter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
{"version":3,"file":"static/js/movieDetailsPage.32dbd43a.chunk.js","mappings":"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","sources":["components/ActorInfo/ActorInfo.styled.jsx","components/Button/Button.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px 0;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n\n  & img {\n    width: 400px;\n    height: auto;\n  }\n`;\n\nexport const ButtonBack = styled(Link)`\n  display: block;\n  width: 200px;\n  padding: 15px;\n  border-radius: 5px;\n  font-family: sans-serif;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${props => props.theme.elementColor};\n  background-color: ${props => props.theme.bgElementColor};\n  transition: background-color ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n  }\n`;\n","import styled from 'styled-components';\n\nconst Wrap = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n  text-transform: uppercase;\n  width: 150px;\n  height: 70px;\n  padding: ${props => props.padding};\n  color: ${props => props.theme.elementColor};\n  background-color: ${props => props.theme.bgElementColor};\n  transition: all ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n  }\n`;\n\nexport default Wrap;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Wrap from 'components/Button/Button.styled';\n\nexport const PageWrap = styled.div`\n  padding-top: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding-top: 20px;\n  margin-bottom: 20px;\n\n  & > img {\n    width: 400px;\n    max-height: auto;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  flex-grow: 1;\n  padding: 40px;\n  & > h1,\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  & h2 {\n    font-size: 20px;\n    font-weight: 500;\n    font-style: italic;\n    color: #817d7d;\n  }\n\n  & > p {\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MainInfo = styled.ul`\n  display: flex;\n  max-width: 30vw;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  & > li:first-child {\n    font-weight: 600;\n    text-align: left;\n    margin-right: 20px;\n  }\n\n  & > li:last-child {\n    text-align: right;\n  }\n\n  & > li > p + p {\n    margin-top: 10px;\n  }\n`;\n\nexport const MovieGenresList = styled.ul`\n  width: 60%;\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 10px;\n\n  & > li {\n    padding: 15px 50px;\n    font-family: sans-serif;\n    text-transform: uppercase;\n    text-align: center;\n    position: relative;\n    text-decoration: none;\n    display: inline-block;\n    background-image: linear-gradient(\n      to right,\n      ${props => props.theme.bgElementColor},\n      ${props => props.theme.bgElementColor} 50%,\n      #000 50%\n    );\n    background-size: 200% 100%;\n    background-position: -100%;\n    position: relative;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: ${props => props.theme.bgElementColor};\n    transition: all ${props => props.theme.hoverTransition}\n      ${props => props.theme.hoverTimeFunction};\n    &:before {\n      content: '';\n      background: ${props => props.theme.bgElementColor};\n      display: block;\n      position: absolute;\n      bottom: -3px;\n      left: 0;\n      width: 0;\n      height: 3px;\n      transition: all 0.3s ease-in-out;\n    }\n    &:hover {\n      background-position: 0;\n    }\n    &:hover::before {\n      width: 100%;\n    }\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 30px;\n  & > p {\n    margin-bottom: 20px;\n    font-size: 20px;\n    font-weight: 500;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin: 0 auto;\n  width: 150px;\n  height: 40px;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: ${props => props.theme.elementColor};\n  border-radius: 5px;\n  background-color: ${props => props.theme.bgElementColor};\n  transition: all ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n  }\n`;\n\nexport const Button = styled(Wrap)`\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { ButtonBack } from '../ActorInfo/ActorInfo.styled';\nimport {\n  PageWrap,\n  InfoWrap,\n  Container,\n  MainInfo,\n  MovieGenresList,\n  AddInfo,\n  StyledLink,\n  ButtonWrap,\n  Button,\n} from './MovieInfo.styled';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst Movieinfo = ({ movieData, handleModalToggle }) => {\n  const [prevLocationState, setPrevLocationState] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setPrevLocationState(location.state);\n  }, [location.state]);\n\n  console.log(prevLocationState);\n\n  const {\n    poster_path,\n    release_date,\n    title,\n    tagline,\n    runtime,\n    overview,\n    budget,\n    genres,\n  } = movieData;\n  return (\n    <PageWrap>\n      {prevLocationState && (\n        <ButtonBack\n          to={\n            prevLocationState?.from?.location ??\n            prevLocationState?.from?.prevLocation ??\n            '/'\n          }\n          state={{\n            from: {\n              location,\n            },\n          }}\n        >\n          Go back\n        </ButtonBack>\n      )}\n      <Container>\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : imageNotFound\n          }\n          alt={title}\n        ></img>\n        <InfoWrap>\n          <h1>{title}</h1>\n          {tagline !== '' && <h2>\"{tagline}\"</h2>}\n          <p>{overview}</p>\n          <MainInfo>\n            <li>\n              <p>Release date:</p>\n              <p>Runtime:</p>\n              {budget !== 0 && <p>Budget:</p>}\n            </li>\n            <li>\n              <p> {release_date}</p>\n              <p>{runtime} minutes </p>\n              {budget !== 0 && <p>{budget} $</p>}\n            </li>\n          </MainInfo>\n          <MovieGenresList>\n            {genres.map(({ id, name }) => (\n              <li key={id}>\n                <p>{name}</p>\n              </li>\n            ))}\n          </MovieGenresList>\n          <Button type=\"button\" padding=\"10px\" onClick={handleModalToggle}>\n            Watch Trailer\n          </Button>\n          <AddInfo>\n            <p>Additional imformation</p>\n            <ButtonWrap>\n              <StyledLink\n                to={`/movies/${movieId}/cast`}\n                state={{\n                  ...prevLocationState,\n                }}\n              >\n                Cast\n              </StyledLink>\n              <StyledLink\n                to={`/movies/${movieId}/reviews`}\n                state={{\n                  ...prevLocationState,\n                }}\n              >\n                Reviews\n              </StyledLink>\n            </ButtonWrap>\n          </AddInfo>\n        </InfoWrap>\n      </Container>\n    </PageWrap>\n  );\n};\n\nMovieinfo.propTypes = {\n  movieData: PropTypes.shape({\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    runtime: PropTypes.number.isRequired,\n    budget: PropTypes.number,\n    genres: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  handleModalToggle: PropTypes.func.isRequired,\n};\n\nexport default Movieinfo;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: ${props => props.theme.backdropColor};\n  color: ${props => props.theme.textColor};\n  overflow-y: scroll;\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-width: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  text-align: center;\n  background-color: ${props => props.theme.modalBgColor};\n  font-weight: ${props => props.theme.mainTextFontWeight};\n\n  & > p {\n    margin-bottom: 10px;\n  }\n\n  & button + button {\n    margin-left: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Modal, Backdrop } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst TrailerModal = ({ children, onModal }) => {\n  const onClickClose = e => {\n    if (e.target.nodeName === 'DIV') {\n      onModal(false);\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onClickClose}>\n      <Modal>{children}</Modal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nTrailerModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onModal: PropTypes.func.isRequired,\n};\n\nexport default TrailerModal;\n","import { useState, useRef, useEffect } from 'react';\nimport { useParams, Route, Routes, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { lazy, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { movieDetails } from 'services/api';\nimport MovieInfo from 'components/MovieInfo';\nimport TrailerModal from 'components/Modal/Modal';\nimport { fetchMovieTrailers } from '../../services/api';\n\nconst Cast = lazy(() =>\n  import('components/Cast' /* webpackChunkName: \"cast\" */)\n);\nconst Reviews = lazy(() =>\n  import('components/Reviews' /* webpackChunkName: \"reviews\" */)\n);\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  let navigate = useNavigate();\n  const youtubeURL = useRef('https://www.youtube.com/embed/');\n  const [isModalOpen, setisModalOpen] = useState(false);\n  const [movieTrailer, setMovieTrailer] = useState(null);\n\n  const handleModalToggle = async bool => {\n    if (!bool) {\n      setisModalOpen(false);\n      return;\n    }\n    setisModalOpen(true);\n    if (!movieTrailer) {\n      const trailer = await addMovieTrailer();\n      sessionStorage.setItem('trailer', JSON.stringify(trailer));\n      setMovieTrailer(trailer);\n    }\n  };\n\n  const addMovieTrailer = async () => {\n    const trailers = await fetchMovieTrailers(movieId);\n    const officicalTrailer = trailers.find(({ name }) =>\n      name.includes('Official')\n    );\n    return officicalTrailer;\n  };\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['movieDetails', { movieId }],\n    movieDetails,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  useEffect(() => {\n    if (data === 404) {\n      const prevMovieId = localStorage.getItem('movieId');\n      navigate(`/movies/${prevMovieId}`);\n    }\n  }, [data, navigate]);\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess && data !== 404) {\n    localStorage.setItem('movieId', JSON.stringify(+movieId));\n    return (\n      <>\n        <MovieInfo\n          movieData={data}\n          handleModalToggle={bool => handleModalToggle(bool)}\n        />\n        <Suspense fallback={<ThreeDots />}>\n          <Routes>\n            <Route path=\"/cast\" element={<Cast />}></Route>\n            <Route path=\"/reviews\" element={<Reviews />}></Route>\n          </Routes>\n        </Suspense>\n        {isModalOpen && (\n          <TrailerModal onModal={bool => handleModalToggle(bool)}>\n            {movieTrailer ? (\n              <iframe\n                src={`${youtubeURL.current}${movieTrailer.key}?autoplay=0&mute=0&controls=1`}\n                title=\"video\"\n                width=\"600\"\n                height=\"400\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              ></iframe>\n            ) : (\n              <h2>We haven't trailer for this movie</h2>\n            )}\n          </TrailerModal>\n        )}\n      </>\n    );\n  }\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n"],"names":["Container","styled","InfoContainer","ButtonBack","Link","props","theme","elementColor","bgElementColor","hoverTransition","hoverTimeFunction","bgElementHoverColor","padding","PageWrap","InfoWrap","MainInfo","MovieGenresList","AddInfo","ButtonWrap","StyledLink","Button","Wrap","movieData","handleModalToggle","useState","prevLocationState","setPrevLocationState","location","useLocation","movieId","useParams","useEffect","state","console","log","poster_path","release_date","title","tagline","runtime","overview","budget","genres","to","from","prevLocation","src","imageNotFound","alt","map","id","name","type","onClick","Backdrop","backdropColor","textColor","Modal","modalBgColor","mainTextFontWeight","modalRoot","document","querySelector","children","onModal","createPortal","e","target","nodeName","Cast","lazy","Reviews","navigate","useNavigate","youtubeURL","useRef","isModalOpen","setisModalOpen","movieTrailer","setMovieTrailer","bool","addMovieTrailer","trailer","sessionStorage","setItem","JSON","stringify","fetchMovieTrailers","trailers","officicalTrailer","find","includes","useQuery","movieDetails","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","prevMovieId","localStorage","getItem","toast","message","MovieInfo","Suspense","fallback","path","element","current","key","width","height","allow","allowFullScreen","axios","fetchTrendmovies","response","results","searchMovie","pageParam","queryKey","_key","query","totalPages","total_pages","length","nextPage","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews"],"sourceRoot":""}
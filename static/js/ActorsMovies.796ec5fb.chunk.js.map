{"version":3,"file":"static/js/ActorsMovies.796ec5fb.chunk.js","mappings":"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","sources":["components/ActorsMovies/ActorsMovies.styled.jsx","components/ActorsMovies/ActorsMovies.jsx","components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","services/moviesApi.jsx","../node_modules/@mui/icons-material/KeyboardBackspace.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\n\nexport const GalleryButton = styled(GoBackButton)`\n  margin-top: 10px;\n`;\n","import { useEffect } from 'react';\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { filmsByActor } from 'services/moviesApi';\nimport CardList from 'components/CardList';\nimport MovieCard from 'components/MovieCard';\nimport { GalleryButton } from './ActorsMovies.styled';\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\n\nconst ActorsMovies = () => {\n  const { actorId } = useParams();\n  const location = useLocation();\n  let navigate = useNavigate();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['filmsByActor', { actorId }],\n    filmsByActor,\n    {\n      staleTime: 60000,\n      cacheTime: 60000,\n    }\n  );\n\n  useEffect(() => {\n    if (data === 404) {\n      const prevActorId = localStorage.getItem('actorId');\n      navigate(`/moviesbyactor/${prevActorId}`);\n    }\n  }, [data, navigate]);\n\n  if (isLoading) {\n    return <GallerySkeleton />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  return (\n    <>\n      {isSuccess && data !== 404 && (\n        <>\n          <GalleryButton path={location?.state?.from?.location ?? '/'} />\n          <CardList>\n            {data.cast.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>\n                  <MovieCard movie={movie}></MovieCard>\n                </Link>\n              </li>\n            ))}\n          </CardList>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ActorsMovies;\n","import styled from '@emotion/styled';\nimport { device } from 'deviceSizes';\n\nexport const List = styled.ul`\n  width: 100%;\n  display: block;\n  padding: 15px 0;\n\n  & > li + li {\n    margin-top: 10px;\n\n    @media ${device.tablet} {\n      margin: 0;\n    }\n  }\n\n  @media ${device.tablet} {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 10px;\n    justify-items: center;\n    align-items: stretch;\n  }\n\n  @media ${device.laptop} {\n    grid-template-columns: repeat(5, 1fr);\n    gap: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","import styled from '@emotion/styled';\nimport IconButton from '@mui/material/IconButton';\n\nconst Wrap = styled(IconButton)`\n  position: sticky;\n  top: 0;\n  right: 95vw;\n  z-index: 2;\n  color: ${({ theme }) => theme.bgElementColor};\n  width: 60px;\n  height: 60px;\n\n  & > svg {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport default Wrap;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport Wrap from './GoBackButton.styled';\n\nconst GoBackButton = ({ path, state }) => (\n  <Link to={path} state={{ state }}>\n    <Wrap>\n      <KeyboardBackspaceIcon />\n    </Wrap>\n  </Link>\n);\n\nGoBackButton.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      location: PropTypes.object,\n    }),\n  }),\n};\n\nexport default GoBackButton;\n","export const getGenreName = (genreIds) => {\n  const genres = window.localStorage.getItem('moviesGenres');\n  const parsedGenres = JSON.parse(genres);\n  let movieGenre = null;\n  let name = null;\n  if (parsedGenres && genreIds.length > 0) {\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\n    name = movieGenre.name;\n  }\n  return name\n}\n","import styled from '@emotion/styled';\nimport { Rating } from '@mui/material';\nimport { device } from 'deviceSizes';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const Card = styled.div`\n  width: 85vw;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    width: 100%;\n    min-height: 100%;\n    background: linear-gradient(\n      180deg,\n      rgba(29, 29, 29, 0) 0%,\n      rgba(29, 29, 29, 0.8) 80.79%\n    );\n  }\n\n  & > p {\n    width: 100%;\n    margin-top: 10px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: ${props => props.theme.textColor};\n\n    @media ${device.tablet} {\n      font-weight: 400;\n      font-size: 18px;\n    }\n  }\n\n  @media ${device.tablet} {\n    width: 28vw;\n  }\n\n  @media ${device.laptop} {\n    width: 17vw;\n  }\n`;\n\nexport const Genre = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 5px;\n  background: rgba(29, 29, 29, 0.5);\n  border-radius: 0px 8px;\n  color: ${props => props.theme.bgElementColor};\n`;\n\nexport const InfoWrap = styled.div`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  bottom: 5px;\n  left: 0;\n`;\n\nexport const Rate = styled(Rating)`\n  color: ${({ theme }) => theme.bgElementColor};\n`;\n","import PropTypes from 'prop-types';\nimport { getGenreName } from 'services/getGenre';\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, title, vote_average, genre_ids } = movie;\n  let genreNames = null;\n  if (genre_ids) {\n    genreNames = getGenreName(genre_ids);\n  }\n  return (\n    <Card>\n      <Container>\n        {genreNames && <Genre>{genreNames}</Genre>}\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\n              : imageNotFound\n          }\n          alt={title}\n        />\n        <InfoWrap>\n          {vote_average > 0 && (\n            <Rate\n              name=\"read-only\"\n              value={vote_average.toFixed(1) / 2}\n              readOnly\n              precision={0.5}\n            />\n          )}\n        </InfoWrap>\n      </Container>\n      <p>{title}</p>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\n  }),\n};\n\nexport default MovieCard;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesGenres() {\n  const response = await axios.get(\n    `genre/movie/list?api_key=${key}&language=en-US`\n  );\n  return response.data.genres;\n}\n\nexport async function fetchMoviesByGenre({ pageParam = 1, queryKey }) {\n  const [_key, { genreId }] = queryKey;\n  console.log(_key);\n  const response = await axios.get(\n    `discover/movie?api_key=${key}&with_genres=${genreId}&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchSimilarMovies() {\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\n  const response = await axios.get(\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\n  );\n  const results = response.data.results;\n  return { results };\n}\n\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function similarMovies({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\n\nexports.default = _default;"],"names":["GalleryButton","styled","GoBackButton","actorId","useParams","location","useLocation","navigate","useNavigate","useQuery","filmsByActor","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","useEffect","prevActorId","localStorage","getItem","GallerySkeleton","toast","message","path","state","from","CardList","cast","map","movie","to","id","MovieCard","List","device","children","IconButton","theme","bgElementColor","KeyboardBackspace","Container","Card","props","textColor","Genre","InfoWrap","Rate","Rating","poster_path","title","vote_average","genre_ids","genreNames","genreIds","genres","window","parsedGenres","JSON","parse","name","length","find","getGenreName","src","imageNotFound","alt","value","toFixed","readOnly","precision","axios","key","fetchTrendmovies","response","results","fetchMoviesGenres","fetchMoviesByGenre","pageParam","queryKey","_key","genreId","console","log","totalPages","total_pages","nextPage","fetchSimilarMovies","pageNumber","Math","floor","random","fetchTopRatedMovies","fetchUpcomingMovies","searchMovie","query","movieDetails","movieId","status","actorDetails","movieCast","movieReviews","fetchMovieTrailers","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
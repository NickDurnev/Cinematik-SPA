{"version":3,"file":"static/js/actorDetailsPage.25503478.chunk.js","mappings":"ySAIaA,EAAgBC,EAAAA,EAAAA,IAAH,6QAQbC,EAAAA,EAAAA,OAICA,EAAAA,EAAAA,QAKHA,EAAAA,EAAAA,SAKEC,GAAUF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2C,mBC6DpB,EAhFkB,SAAC,GAAc,IAAD,MAAXI,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAGNE,EAQEL,EARFK,UACAC,EAOEN,EAPFM,aACAC,EAMEP,EANFO,KACAC,EAKER,EALFQ,SACAC,EAIET,EAJFS,SACAC,EAGEV,EAHFU,OACAC,EAEEX,EAFFW,eACAC,EACEZ,EADFY,WAGF,OACE,2BACGX,EAASY,QACR,SAACC,EAAA,EAAD,CAAcC,KAAI,iBAAEd,QAAF,IAAEA,GAAF,UAAEA,EAAUY,aAAZ,iBAAE,EAAiBG,YAAnB,aAAE,EAAuBf,gBAAzB,QAAqC,OAEzD,UAACN,EAAD,YACE,0BACE,gBACEsB,IACmB,OAAjBX,EAAA,yCACsCA,GAClCY,EAENC,IAAKZ,OAGT,UAAC,KAAD,YACE,wBAAKA,KACL,uBAAIF,KACJ,UAAC,KAAD,YACE,0BACGG,IAAY,0CACZC,IAAY,qCACZC,IAAU,mCACVC,IAAkB,8CAClBC,IAAc,uCAEjB,0BACGJ,IAAY,6BAAKA,KACjBC,IAAY,uBAAIA,IACL,IAAXC,GAAe,mCAAgB,gCAC/BC,IAAkB,uBAAIA,IACtBC,IAAc,uBAAIA,EAAWQ,QAAQ,YAG1C,SAACtB,EAAD,CACEuB,GAAE,yBAAoBlB,GACtBU,MAAO,CACLG,KAAM,CACJf,SAAAA,IAJN,8BCjBV,EAhCyB,WACvB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACJmB,GAAWC,EAAAA,EAAAA,MAEf,GAAuDC,EAAAA,EAAAA,UACrD,CAAC,eAAgB,CAAErB,QAAAA,IACnBsB,EAAAA,GACA,CAAEC,UAAW,IAAOC,UAAW,MAHzB3B,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,UAczC,OARAC,EAAAA,EAAAA,YAAU,WACR,GAAa,MAAThC,EAAc,CAChB,IAAMiC,EAAcC,aAAaC,QAAQ,WACnCC,EAAcF,aAAaC,QAAQ,WACzCb,EAAS,WAAD,OAAYc,EAAZ,uBAAsCH,OAE/C,CAACjC,EAAMsB,IAENO,GACK,SAAC,IAAD,IAGLC,EACKO,EAAAA,GAAAA,MAAA,gDAAuBT,EAAMU,UAGlCP,GAAsB,MAAT/B,GACfkC,aAAaK,QAAQ,UAAWC,KAAKC,WAAWtC,KACzC,SAAC,EAAD,CAAWH,KAAMA,UAF1B","sources":["components/ActorInfo/ActorInfo.styled.jsx","components/ActorInfo/ActorInfo.jsx","pages/ActorDetailsPage/ActorDetailsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { StyledLink } from 'components/MovieInfo/MovieInfo.styled';\nimport { device } from 'deviceSizes';\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n\n  & img {\n    width: width: 85vw;\n    max-height: auto;\n\n    @media ${device.tablet} {\n      width: 250px;\n    }\n\n     @media ${device.laptopL} {\n      width: 400px;\n    }\n  }\n\n  @media ${device.mobileM} {\n    display: block;\n  }\n`;\n\nexport const NavLink = styled(StyledLink)`\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation, useParams } from 'react-router-dom';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\nimport { InfoContainer, NavLink } from './ActorInfo.styled';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport { MainInfo, InfoWrap } from 'components/MovieInfo/MovieInfo.styled';\n\nconst ActorInfo = ({ data }) => {\n  const location = useLocation();\n  const { actorId } = useParams();\n\n  const {\n    biography,\n    profile_path,\n    name,\n    birthday,\n    deathday,\n    gender,\n    place_of_birth,\n    popularity,\n  } = data;\n\n  return (\n    <div>\n      {location.state && (\n        <GoBackButton path={location?.state?.from?.location ?? '/'} />\n      )}\n      <InfoContainer>\n        <div>\n          <img\n            src={\n              profile_path !== null\n                ? `https://image.tmdb.org/t/p/w400${profile_path}`\n                : imageNotFound\n            }\n            alt={name}\n          ></img>\n        </div>\n        <InfoWrap>\n          <h1>{name}</h1>\n          <p>{biography}</p>\n          <MainInfo>\n            <li>\n              {birthday && <p>Birthday date:</p>}\n              {deathday && <p>Deathday:</p>}\n              {gender && <p>Gender:</p>}\n              {place_of_birth && <p>Place of birthday:</p>}\n              {popularity && <p>Rating:</p>}\n            </li>\n            <li>\n              {birthday && <p> {birthday}</p>}\n              {deathday && <p>{deathday}</p>}\n              {gender === 1 ? <p>Female</p> : <p>Male</p>}\n              {place_of_birth && <p>{place_of_birth}</p>}\n              {popularity && <p>{popularity.toFixed(1)}</p>}\n            </li>\n          </MainInfo>\n          <NavLink\n            to={`/moviesbyactor/${actorId}`}\n            state={{\n              from: {\n                location,\n              },\n            }}\n          >\n            Movies\n          </NavLink>\n        </InfoWrap>\n      </InfoContainer>\n    </div>\n  );\n};\n\nActorInfo.propTypes = {\n  data: PropTypes.shape({\n    biography: PropTypes.string,\n    profile_path: PropTypes.string,\n    name: PropTypes.string,\n    birthday: PropTypes.string,\n    deathday: PropTypes.string,\n    gender: PropTypes.number,\n    place_of_birth: PropTypes.string,\n    popularity: PropTypes.number,\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default ActorInfo;\n","import { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { actorDetails } from 'services/moviesApi';\nimport ActorInfo from 'components/ActorInfo';\n\nconst ActorDetailsPage = () => {\n  const { actorId } = useParams();\n  let navigate = useNavigate();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['movieDetails', { actorId }],\n    actorDetails,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  useEffect(() => {\n    if (data === 404) {\n      const prevActorId = localStorage.getItem('actorId');\n      const prevMovieId = localStorage.getItem('movieId');\n      navigate(`/movies/${prevMovieId}/cast/actor/${prevActorId}`);\n    }\n  }, [data, navigate]);\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess && data !== 404) {\n    localStorage.setItem('actorId', JSON.stringify(+actorId));\n    return <ActorInfo data={data} />;\n  }\n};\n\nexport default ActorDetailsPage;\n"],"names":["InfoContainer","styled","device","NavLink","StyledLink","data","location","useLocation","actorId","useParams","biography","profile_path","name","birthday","deathday","gender","place_of_birth","popularity","state","GoBackButton","path","from","src","imageNotFound","alt","toFixed","to","navigate","useNavigate","useQuery","actorDetails","staleTime","cacheTime","error","isLoading","isError","isSuccess","useEffect","prevActorId","localStorage","getItem","prevMovieId","toast","message","setItem","JSON","stringify"],"sourceRoot":""}
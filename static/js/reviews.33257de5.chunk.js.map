{"version":3,"file":"static/js/reviews.33257de5.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 70%;\n  margin: 0 auto;\n  padding: 10px 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  padding: 20px;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${props => props.theme.bgCastCard};\n  border-radius: 5px;\n  & + & {\n    margin-top: 10px;\n  }\n\n  & > div:first-child {\n    min-width: 100px;\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  margin-bottom: 5px;\n`;\n\nexport const Avatar = styled.img`\n  margin: 0 auto;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n`;\n\nexport const Info = styled.div`\n  width: 95%;\n  & p + p {\n    margin-top: 5px;\n  }\n`;\n\nexport const Date = styled.p`\n  font-size: 20px;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import { useInfiniteQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { movieReviews } from 'services/moviesApi';\nimport {\n  List,\n  Item,\n  AvatarContainer,\n  Avatar,\n  Info,\n  Date,\n  Name,\n} from './Reviews.styled';\nimport { FaUserCircle } from 'react-icons/fa';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const {\n    data,\n    error,\n    isLoading,\n    isError,\n    isSuccess,\n    fetchNextPage,\n    hasNextPage,\n  } = useInfiniteQuery(['movieReviews', { movieId }], movieReviews, {\n    getNextPageParam: pages => {\n      if (pages.nextPage > pages.totalPages) {\n        return undefined;\n      }\n      return pages.nextPage;\n    },\n    staleTime: 60000,\n    cacheTime: 60000,\n  });\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess) {\n    if (data.pages[0].results.length === 0) {\n      return <h2>We don't have any reviews for this movie</h2>;\n    }\n\n    console.log(data);\n    return (\n      <InfiniteScroll hasMore={hasNextPage} loadMore={fetchNextPage}>\n        {data.pages.map(({ results, nextPage }) => (\n          <List key={`id${nextPage}`}>\n            {results.map(\n              ({ author, content, created_at, id, author_details }) => {\n                const { avatar_path } = author_details;\n                let formattedPath = null;\n                if (avatar_path) {\n                  formattedPath = avatar_path.replace('/', '');\n                }\n                return (\n                  <Item key={id}>\n                    <div>\n                      <AvatarContainer>\n                        {avatar_path &&\n                        formattedPath.includes('www.gravatar.com') ? (\n                          <Avatar src={formattedPath} alt=\"User avatar\" />\n                        ) : (\n                          <FaUserCircle size=\"60\"></FaUserCircle>\n                        )}\n                      </AvatarContainer>\n                    </div>\n                    <Info>\n                      <Date>{created_at.substr(0, 10)}</Date>\n                      <Name>{author}</Name>\n                      <p>{content}</p>\n                    </Info>\n                  </Item>\n                );\n              }\n            )}\n          </List>\n        ))}\n      </InfiniteScroll>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesGenres() {\n  const response = await axios.get(\n    `genre/movie/list?api_key=${key}&language=en-US`\n  );\n  return response.data.genres;\n}\n\nexport async function fetchSimilarMovies() {\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\n  const response = await axios.get(\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\n  );\n  const results = response.data.results;\n  return { results };\n}\n\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function similarMovies({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n"],"names":["List","styled","Item","props","theme","bgCastCard","AvatarContainer","Avatar","Info","Date","Name","movieId","useParams","useInfiniteQuery","movieReviews","getNextPageParam","pages","nextPage","totalPages","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","fetchNextPage","hasNextPage","toast","message","results","length","console","log","hasMore","loadMore","map","author","content","created_at","id","avatar_path","author_details","formattedPath","replace","includes","src","alt","size","substr","axios","key","fetchTrendmovies","response","fetchMoviesGenres","genres","fetchSimilarMovies","pageNumber","Math","floor","random","fetchTopRatedMovies","pageParam","total_pages","fetchUpcomingMovies","searchMovie","queryKey","_key","query","movieDetails","status","actorDetails","actorId","filmsByActor","movieCast","fetchMovieTrailers"],"sourceRoot":""}
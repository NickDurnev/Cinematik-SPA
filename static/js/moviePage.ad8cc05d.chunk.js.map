{"version":3,"file":"static/js/moviePage.ad8cc05d.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/Loaders/GallerySkeleton.styled.jsx","components/Loaders/GallerySkeleton.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding: 15px 0;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { Container } from './GallerySkeleton.styled';\n\nconst Skeleton = props => (\n  <ContentLoader\n    speed={2}\n    width={400}\n    height={460}\n    viewBox=\"0 0 400 460\"\n    style={{ width: '100%', height: 'auto' }}\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"110\" y=\"466\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n    <rect x=\"32\" y=\"-24\" rx=\"0\" ry=\"0\" width=\"384\" height=\"400\" />\n    <rect x=\"32\" y=\"400\" rx=\"0\" ry=\"0\" width=\"392\" height=\"31\" />\n  </ContentLoader>\n);\n\nconst GallerySkeleton = () => {\n  return (\n    <Container>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </Container>\n  );\n};\n\nexport default GallerySkeleton;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    min-height: 485px;\n  }\n\n  & > div {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 60px;\n    display: flex;\n    padding: 5px;\n    justify-content: space-around;\n    align-items: center;\n    background-color: #e2d5d5a6;\n    border-radius: 10px;\n    object-fit: cover;\n  }\n\n  & > div > p {\n    font-weight: 500;\n    color: ${props => props.theme.textColor};\n  }\n\n  & > p {\n    margin-top: 10px;\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${props => props.theme.textColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Card } from './MovieCard.styled';\nimport { BsFillStarFill } from 'react-icons/bs';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, original_title, vote_average } = movie;\n\n  return (\n    <Card>\n      <img\n        src={\n          poster_path !== null\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : imageNotFound\n        }\n        alt={original_title}\n      ></img>\n      <p>{original_title}</p>\n      <div>\n        <BsFillStarFill size=\"20px\" color=\"gold\" />\n        <p>{vote_average.toFixed(1)}</p>\n      </div>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const Bar = styled.header`\n  top: 50px;\n  left: 0;\n  position: sticky;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: ${props => props.theme.bgSearchBar};\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  & > input {\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  & > input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  & > button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  & > button:hover,\n  button:focus {\n    opacity: 1;\n  }\n  & span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { SearchForm, Bar } from './Searchbar.styled';\nimport { FiSearch } from 'react-icons/fi';\n\nconst Searchbar = ({ onSubmit, onChange }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit();\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n    onChange(inputValue);\n  };\n\n  return (\n    <Bar>\n      <SearchForm onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <FiSearch size=\"24\"></FiSearch>\n          <span>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n      </SearchForm>\n    </Bar>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useInfiniteQuery } from 'react-query';\nimport { useInView } from 'react-intersection-observer';\nimport { toast } from 'react-toastify';\nimport { searchMovie } from '../../services/api';\nimport Searchbar from 'components/Searchbar';\nimport CardList from 'components/CardList';\nimport MovieCard from 'components/MovieCard';\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  let navigate = useNavigate();\n\n  const { ref: ListRef, inView } = useInView({\n    threshold: 0.1,\n  });\n\n  const { data, error, fetchNextPage, isLoading, isError, isSuccess, refetch } =\n    useInfiniteQuery(['searchMovie', { query }], searchMovie, {\n      enabled: false,\n      staleTime: 60000,\n      cacheTime: 60000,\n      getNextPageParam: pages => {\n        if (pages.nextPage > pages.totalPages) {\n          return undefined;\n        }\n        return pages.nextPage;\n      },\n    });\n\n  useEffect(() => {\n    if (inView) {\n      fetchNextPage();\n    }\n  }, [fetchNextPage, inView]);\n\n  const handleSubmit = () => {\n    navigate(`?query=${query}`);\n    refetch();\n  };\n\n  if (isLoading && data) {\n    return <GallerySkeleton />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n  console.log(data);\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} onChange={value => setQuery(value)} />\n      {isSuccess && data && (\n        <>\n          {data.pages.map(({ results, nextPage }) => (\n            <CardList key={`id${nextPage}`}>\n              {results.map(movie => (\n                <li key={movie.id}>\n                  <Link to={`/movies/${movie.id}`}>\n                    <MovieCard movie={movie}></MovieCard>\n                  </Link>\n                </li>\n              ))}\n            </CardList>\n          ))}\n          <div ref={ListRef}></div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (query !== '') {\n    const response = await axios.get(\n      `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    if (!results.length) {\n      toast.info('Movies were not found');\n      return null;\n    }\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  }\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `person/${actorId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(actorId);\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n"],"names":["List","styled","children","Container","Skeleton","props","speed","width","height","viewBox","style","backgroundColor","foregroundColor","x","y","rx","ry","Card","theme","textColor","movie","poster_path","original_title","vote_average","src","imageNotFound","alt","size","color","toFixed","Bar","bgSearchBar","SearchForm","onSubmit","onChange","useState","inputValue","setInputValue","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","target","query","setQuery","navigate","useNavigate","useInView","threshold","ListRef","ref","inView","useInfiniteQuery","searchMovie","enabled","staleTime","cacheTime","getNextPageParam","pages","nextPage","totalPages","data","error","fetchNextPage","isLoading","isError","isSuccess","refetch","useEffect","GallerySkeleton","toast","message","console","log","map","results","CardList","to","id","MovieCard","axios","key","fetchTrendmovies","response","pageParam","queryKey","_key","total_pages","length","movieDetails","movieId","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers"],"sourceRoot":""}
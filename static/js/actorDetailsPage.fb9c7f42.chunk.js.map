{"version":3,"file":"static/js/actorDetailsPage.fb9c7f42.chunk.js","mappings":"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","sources":["components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","components/Button/Button.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/ActorInfo/ActorInfo.styled.jsx","components/ActorInfo/ActorInfo.jsx","pages/ActorDetailsPage/ActorDetailsPage.styled.jsx","pages/ActorDetailsPage/ActorDetailsPage.jsx","services/moviesApi.jsx","../node_modules/@mui/icons-material/KeyboardBackspace.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport IconButton from '@mui/material/IconButton';\n\nconst Wrap = styled(IconButton)`\n  display: block;\n  color: ${({ theme }) => theme.bgElementColor};\n  width: 60px;\n  height: 60px;\n\n  & > svg {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport default Wrap;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport Wrap from './GoBackButton.styled';\n\nconst GoBackButton = ({ path, state }) => (\n  <Link to={path} state={{ state }}>\n    <Wrap>\n      <KeyboardBackspaceIcon />\n    </Wrap>\n  </Link>\n);\n\nGoBackButton.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      location: PropTypes.object,\n    }),\n  }),\n};\n\nexport default GoBackButton;\n","import styled from '@emotion/styled';\n\nconst Wrap = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n  text-transform: uppercase;\n  width: 150px;\n  height: 70px;\n  padding: ${({ theme }) => theme.padding};\n  color: ${({ theme }) => theme.elementColor};\n  background-color: ${({ theme }) => theme.bgElementColor};\n  transition: all ${({ theme }) => theme.hoverTransition}\n    ${({ theme }) => theme.hoverTimeFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.bgElementHoverColor};\n  }\n`;\n\nexport default Wrap;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport Wrap from 'components/Button/Button.styled';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 20px;\n\n  & img {\n    width: 400px;\n    max-height: auto;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  width: calc(100% - 60px);\n  padding: 0 40px;\n  & > h1,\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  & h2 {\n    font-size: 20px;\n    font-weight: 500;\n    font-style: italic;\n    color: #817d7d;\n  }\n\n  & > p {\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MainInfo = styled.ul`\n  display: flex;\n  max-width: 30vw;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  & > li:first-of-type {\n    font-weight: 600;\n    text-align: left;\n    margin-right: 20px;\n  }\n\n  & > li:last-child {\n    text-align: right;\n  }\n\n  & > li > p + p {\n    margin-top: 10px;\n  }\n`;\n\nexport const MovieGenresList = styled.ul`\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n\n  & > li {\n    padding: 15px 50px;\n    font-family: sans-serif;\n    text-transform: uppercase;\n    text-align: center;\n    position: relative;\n    text-decoration: none;\n    display: inline-block;\n    background-image: linear-gradient(\n      to right,\n      ${props => props.theme.bgElementColor},\n      ${props => props.theme.bgElementColor} 50%,\n      #000 50%\n    );\n    background-size: 200% 100%;\n    background-position: -100%;\n    position: relative;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: ${props => props.theme.bgElementColor};\n    transition: all ${props => props.theme.hoverTransition}\n      ${props => props.theme.hoverTimeFunction};\n    &:before {\n      content: '';\n      background: ${props => props.theme.bgElementColor};\n      display: block;\n      position: absolute;\n      bottom: -3px;\n      left: 0;\n      width: 0;\n      height: 3px;\n      transition: all 0.3s ease-in-out;\n    }\n    &:hover {\n      background-position: 0;\n    }\n    &:hover::before {\n      width: 100%;\n    }\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 140px;\n`;\n\nexport const LinkWrap = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 150px;\n  height: 40px;\n  padding: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: ${props => props.theme.bgElementColor};\n  border-radius: 5px;\n  background-color: inherit;\n  transition: all ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n    color: ${props => props.theme.elementColor};\n  }\n`;\n\nexport const Button = styled(Wrap)`\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n","import styled from '@emotion/styled';\nimport { StyledLink } from 'components/MovieInfo/MovieInfo.styled';\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n\n  & img {\n    width: 400px;\n    height: auto;\n  }\n`;\n\nexport const NavLink = styled(StyledLink)`\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation, useParams } from 'react-router-dom';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\nimport { InfoContainer, NavLink } from './ActorInfo.styled';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport { MainInfo, InfoWrap } from 'components/MovieInfo/MovieInfo.styled';\n\nconst ActorInfo = ({ data }) => {\n  const location = useLocation();\n  const { actorId } = useParams();\n\n  console.log(location);\n\n  const {\n    biography,\n    profile_path,\n    name,\n    birthday,\n    deathday,\n    gender,\n    place_of_birth,\n    popularity,\n  } = data;\n\n  return (\n    <div>\n      {location.state && (\n        <GoBackButton path={location?.state?.from?.location ?? '/'} />\n      )}\n      <InfoContainer>\n        <div>\n          <img\n            src={\n              profile_path !== null\n                ? `https://image.tmdb.org/t/p/w400${profile_path}`\n                : imageNotFound\n            }\n            alt={name}\n          ></img>\n        </div>\n        <InfoWrap>\n          <h1>{name}</h1>\n          <p>{biography}</p>\n          <MainInfo>\n            <li>\n              {birthday && <p>Birthday date:</p>}\n              {deathday && <p>Deathday:</p>}\n              {gender && <p>Gender:</p>}\n              {place_of_birth && <p>Place of birthday:</p>}\n              {popularity && <p>Rating:</p>}\n            </li>\n            <li>\n              {birthday && <p> {birthday}</p>}\n              {deathday && <p>{deathday}</p>}\n              {gender === 1 ? <p>Female</p> : <p>Male</p>}\n              {place_of_birth && <p>{place_of_birth}</p>}\n              {popularity && <p>{popularity.toFixed(1)}</p>}\n            </li>\n          </MainInfo>\n          <NavLink\n            to={`/moviesbyactor/${actorId}`}\n            state={{\n              from: {\n                location,\n                label: 'Go back to actor',\n              },\n            }}\n          >\n            Movies\n          </NavLink>\n        </InfoWrap>\n      </InfoContainer>\n    </div>\n  );\n};\n\nActorInfo.propTypes = {\n  data: PropTypes.shape({\n    biography: PropTypes.string,\n    profile_path: PropTypes.string,\n    name: PropTypes.string,\n    birthday: PropTypes.string,\n    deathday: PropTypes.string,\n    gender: PropTypes.number,\n    place_of_birth: PropTypes.string,\n    popularity: PropTypes.number,\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default ActorInfo;\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  width: 95vw;\n  padding: 10px 5px;\n`;\n\nexport default Container;\n","import { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { actorDetails } from 'services/moviesApi';\nimport ActorInfo from 'components/ActorInfo';\nimport Container from './ActorDetailsPage.styled';\n\nconst ActorDetailsPage = () => {\n  const { actorId } = useParams();\n  let navigate = useNavigate();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['movieDetails', { actorId }],\n    actorDetails,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  useEffect(() => {\n    if (data === 404) {\n      const prevActorId = localStorage.getItem('actorId');\n      const prevMovieId = localStorage.getItem('movieId');\n      navigate(`/movies/${prevMovieId}/cast/actor/${prevActorId}`);\n    }\n  }, [data, navigate]);\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess && data !== 404) {\n    localStorage.setItem('actorId', JSON.stringify(+actorId));\n    return (\n      <Container>\n        <ActorInfo data={data} />\n      </Container>\n    );\n  }\n};\n\nexport default ActorDetailsPage;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesGenres() {\n  const response = await axios.get(\n    `genre/movie/list?api_key=${key}&language=en-US`\n  );\n  return response.data.genres;\n}\n\nexport async function fetchSimilarMovies() {\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\n  const response = await axios.get(\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\n  );\n  const results = response.data.results;\n  return { results };\n}\n\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function similarMovies({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\n\nexports.default = _default;"],"names":["styled","IconButton","theme","bgElementColor","path","state","to","KeyboardBackspace","padding","elementColor","hoverTransition","hoverTimeFunction","bgElementHoverColor","Container","InfoWrap","MainInfo","MovieGenresList","props","AddInfo","LinkWrap","StyledLink","Link","Button","Wrap","InfoContainer","NavLink","data","location","useLocation","actorId","useParams","console","log","biography","profile_path","name","birthday","deathday","gender","place_of_birth","popularity","GoBackButton","from","src","imageNotFound","alt","toFixed","label","navigate","useNavigate","useQuery","actorDetails","staleTime","cacheTime","error","isLoading","isError","isSuccess","useEffect","prevActorId","localStorage","getItem","prevMovieId","toast","message","setItem","JSON","stringify","axios","key","fetchTrendmovies","response","results","fetchMoviesGenres","genres","fetchSimilarMovies","pageNumber","Math","floor","random","fetchTopRatedMovies","pageParam","totalPages","total_pages","nextPage","fetchUpcomingMovies","searchMovie","queryKey","_key","query","length","movieDetails","movieId","status","filmsByActor","movieCast","movieReviews","fetchMovieTrailers","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
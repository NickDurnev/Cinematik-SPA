{"version":3,"file":"static/js/cast.9fe0d4bb.chunk.js","mappings":"wRAEaA,EAAWC,EAAAA,GAAAA,IAAH,mQAGC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAS9B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,aAIrBC,EAAWL,EAAAA,GAAAA,EAAH,4FAMRM,EAAYN,EAAAA,GAAAA,EAAH,iE,SCQtB,EA5BiB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KACVC,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,aACzB,OACE,UAACX,EAAD,YACE,gBACEY,IACmB,OAAjBD,EAAA,yCACsCA,GAClCE,EAENC,IAAKJ,KAEP,4BACE,SAACJ,EAAD,UAAWG,KACX,SAACF,EAAD,UAAYG,WCTpB,EAPiBT,EAAAA,GAAAA,GAAH,0GCoDd,EA9Ca,WACX,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACTC,EAAaF,EAAbE,SAER,GAAuDC,EAAAA,EAAAA,UACrD,CAAC,YAAa,CAAEL,QAAAA,IAChBM,EAAAA,GACA,CAAEC,UAAW,IAAOC,UAAW,MAHzBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,UAMzC,OAAIF,GACK,SAAC,IAAD,IAGLC,EACKE,EAAAA,GAAAA,MAAA,gDAAuBJ,EAAMK,UAGlCF,GACFG,QAAQC,IAAIvB,EAAKwB,OAEf,SAAC,EAAD,UACGxB,EAAKwB,KAAKC,KAAI,SAAAC,GACb,IAAQC,EAAgBD,EAAhBC,GAAIC,EAAYF,EAAZE,QACZ,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKlB,EAAL,kBAAuBgB,GACzBG,MAAO,CACLC,KAAM,CACJtB,SAAAA,EACAuB,MAAO,qBALb,UASE,SAAC,EAAD,CAAUhC,KAAM0B,OAVXE,cAPnB,I","sources":["components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  width: calc((100vw - 20px) / 8);\n  margin: 10px;\n  background-color: ${props => props.theme.bgCastCard};\n  border-radius: 5px;\n  & > img {\n    width: 100%;\n    height: auto;\n  }\n  & > div {\n    min-height: 100px;\n    padding: 5px;\n    color: ${props => props.theme.textColor};\n  }\n`;\n\nexport const RoleName = styled.p`\n  padding-top: 10px;\n  font-style: italic;\n  margin-bottom: 5px;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\nimport { CardWrap, RoleName, ActorName } from './CastCard.styled';\n\nconst CastCard = ({ data }) => {\n  const { character, name, profile_path } = data;\n  return (\n    <CardWrap>\n      <img\n        src={\n          profile_path !== null\n            ? `https://image.tmdb.org/t/p/w300${profile_path}`\n            : imageNotFound\n        }\n        alt={name}\n      ></img>\n      <div>\n        <RoleName>{character}</RoleName>\n        <ActorName>{name}</ActorName>\n      </div>\n    </CardWrap>\n  );\n};\n\nCastCard.propTypes = {\n  data: PropTypes.shape({\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }),\n};\n\nexport default CastCard;\n","import styled from 'styled-components';\n\nconst CastList = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport default CastList;\n","import { useQuery } from 'react-query';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { movieCast } from 'services/api';\nimport CastCard from 'components/CastCard';\nimport CastList from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const { pathname } = location;\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['movieCast', { movieId }],\n    movieCast,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess) {\n    console.log(data.cast);\n    return (\n      <CastList>\n        {data.cast.map(actor => {\n          const { id, cast_id } = actor;\n          return (\n            <li key={cast_id}>\n              <Link\n                to={`${pathname}/actor/${id}`}\n                state={{\n                  from: {\n                    location,\n                    label: 'Go back to movie',\n                  },\n                }}\n              >\n                <CastCard data={actor} />\n              </Link>\n            </li>\n          );\n        })}\n      </CastList>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["CardWrap","styled","props","theme","bgCastCard","textColor","RoleName","ActorName","data","character","name","profile_path","src","imageNotFound","alt","movieId","useParams","location","useLocation","pathname","useQuery","movieCast","staleTime","cacheTime","error","isLoading","isError","isSuccess","toast","message","console","log","cast","map","actor","id","cast_id","to","state","from","label"],"sourceRoot":""}
{"version":3,"file":"static/js/moviePage.856090dd.chunk.js","mappings":"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","sources":["components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","components/Loaders/GallerySkeleton.styled.jsx","components/Loaders/GallerySkeleton.jsx","services/getGenre.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.jsx","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import PropTypes from 'prop-types';\nimport { List } from './CardList.styled';\n\nconst CardList = ({ children }) => <List>{children}</List>;\n\nCardList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CardList;\n","import styled from '@emotion/styled';\nimport { Skeleton } from '@mui/material';\n\nexport const Wrap = styled.div`\n  width: 100%;\n`;\n\nexport const SkeletonRectangle = styled(Skeleton)`\n  width: 100%;\n  height: 300px;\n`;\n\nexport const SkeletonText = styled(Skeleton)`\n  width: 100%;\n  height: 30px;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 40px 15px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  column-gap: 20px;\n  row-gap: 40px;\n  justify-items: center;\n  align-items: stretch;\n`;\n","import React from 'react';\nimport {\n  Wrap,\n  SkeletonRectangle,\n  SkeletonText,\n  Container,\n} from './GallerySkeleton.styled';\n\nconst SkeletonWrap = () => (\n  <Wrap>\n    <SkeletonRectangle variant=\"rectangular\" animation=\"wave\" />\n    <SkeletonText variant=\"text\" animation=\"wave\" />\n  </Wrap>\n);\n\nconst GallerySkeleton = () => {\n  return (\n    <Container>\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n      <SkeletonWrap />\n    </Container>\n  );\n};\n\nexport default GallerySkeleton;\n","export const getGenreName = (genreIds) => {\n  const genres = window.localStorage.getItem('moviesGenres');\n  const parsedGenres = JSON.parse(genres);\n  let movieGenre = null;\n  let name = null;\n  if (parsedGenres && genreIds.length > 0) {\n    movieGenre = parsedGenres.find(({ id }) => id === genreIds[0]);\n    name = movieGenre.name;\n  }\n  return name\n}\n","import styled from '@emotion/styled';\nimport { Rating } from '@mui/material';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const Card = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n\n  & > img {\n    min-height: 485px;\n    background: linear-gradient(\n      180deg,\n      rgba(29, 29, 29, 0) 0%,\n      rgba(29, 29, 29, 0.8) 80.79%\n    );\n  }\n\n  & > p {\n    margin-top: 10px;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: ${props => props.theme.textColor};\n  }\n`;\n\nexport const Genre = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 5px;\n  background: rgba(29, 29, 29, 0.5);\n  border-radius: 0px 8px;\n  color: ${props => props.theme.bgElementColor};\n`;\n\nexport const InfoWrap = styled.div`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  bottom: 5px;\n  left: 0;\n`;\n\nexport const Rate = styled(Rating)`\n  color: ${({ theme }) => theme.bgElementColor};\n`;\n","import PropTypes from 'prop-types';\nimport { getGenreName } from 'services/getGenre';\nimport { Container, Card, InfoWrap, Rate, Genre } from './MovieCard.styled';\nimport imageNotFound from '../../images/Error 404 Wallpaper.jpg';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, title, vote_average, genre_ids } = movie;\n  const name = getGenreName(genre_ids);\n  return (\n    <Card>\n      <Container>\n        <Genre>{name}</Genre>\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\n              : imageNotFound\n          }\n          alt={title}\n        />\n        <InfoWrap>\n          {vote_average > 0 && (\n            <Rate\n              name=\"read-only\"\n              value={vote_average.toFixed(1) / 2}\n              readOnly\n              precision={0.5}\n            />\n          )}\n        </InfoWrap>\n      </Container>\n      <p>{title}</p>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genre_ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const Bar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: ${props => props.theme.bgSearchBar};\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  & > input {\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  & > input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  & > button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  & > button:hover,\n  button:focus {\n    opacity: 1;\n  }\n  & span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { SearchForm, Bar } from './Searchbar.styled';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Searchbar = ({ onSubmit, onChange }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit();\n  };\n\n  const handleChange = e => {\n    const input = e.target.value.trim();\n    setInputValue(input);\n    onChange(input);\n  };\n\n  return (\n    <Bar>\n      <SearchForm onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <SearchIcon />\n          <span>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n      </SearchForm>\n    </Bar>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 95vw;\n  margin: 0 auto;\n`;\n\nexport const FetchMarker = styled.div`\n  width: 5px;\n  height: 5px;\n`;\n","import { useEffect } from 'react';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\nimport { useInfiniteQuery } from 'react-query';\nimport { useInView } from 'react-intersection-observer';\nimport { toast } from 'react-toastify';\nimport { searchMovie } from '../../services/moviesApi';\nimport Searchbar from 'components/Searchbar';\nimport CardList from 'components/CardList';\nimport MovieCard from 'components/MovieCard';\nimport { Container, FetchMarker } from './MoviesPage.styled';\nimport GallerySkeleton from 'components/Loaders/GallerySkeleton';\n\nconst MoviesPage = ({ onChange, query }) => {\n  const location = useLocation();\n  let navigate = useNavigate();\n\n  const { ref: ListRef, inView } = useInView({\n    threshold: 0.1,\n  });\n\n  const { data, error, fetchNextPage, isLoading, isError, isSuccess, refetch } =\n    useInfiniteQuery(['searchMovie', { query }], searchMovie, {\n      enabled: false,\n      staleTime: 60000,\n      cacheTime: 60000,\n      getNextPageParam: pages => {\n        if (!pages) {\n          return;\n        }\n        if (pages.nextPage > pages.totalPages) {\n          return undefined;\n        }\n        return pages.nextPage;\n      },\n    });\n\n  useEffect(() => {\n    if (location.state) {\n      const prevQuery = location.search.slice(7, location.search.length);\n      onChange(prevQuery);\n      refetch();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (inView) {\n      fetchNextPage();\n    }\n  }, [fetchNextPage, inView]);\n\n  const handleSubmit = async () => {\n    if (query) {\n      const fetch = await refetch();\n      if (fetch.data.pages[0].results.length !== 0) {\n        navigate(`?query=${query}`);\n      }\n    }\n  };\n\n  if (isLoading && data) {\n    return <GallerySkeleton />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  console.log(data);\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleSubmit} onChange={onChange} />\n      {isSuccess && data.pages[0] && (\n        <>\n          {data.pages.map(({ results, nextPage }) => (\n            <CardList key={`id${nextPage}`}>\n              {results.map(movie => (\n                <li key={movie.id}>\n                  <Link\n                    to={`/movies/${movie.id}`}\n                    state={{\n                      from: {\n                        location,\n                      },\n                    }}\n                  >\n                    <MovieCard movie={movie}></MovieCard>\n                  </Link>\n                </li>\n              ))}\n            </CardList>\n          ))}\n        </>\n      )}\n      <FetchMarker ref={ListRef}></FetchMarker>\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesGenres() {\n  const response = await axios.get(\n    `genre/movie/list?api_key=${key}&language=en-US`\n  );\n  return response.data.genres;\n}\n\nexport async function fetchMoviesByGenre({ pageParam = 1, queryKey }) {\n  const [_key, { genreId }] = queryKey;\n  console.log(_key);\n  const response = await axios.get(\n    `discover/movie?api_key=${key}&with_genres=${genreId}&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchSimilarMovies() {\n  const pageNumber = Math.floor(Math.random() * (500 - 1 + 1)) + 1;\n  const response = await axios.get(\n    `movie/725201/similar?api_key=${key}&language=en-US&page=${pageNumber}`\n  );\n  const results = response.data.results;\n  return { results };\n}\n\nexport async function fetchTopRatedMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/top_rated?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchUpcomingMovies({ pageParam = 1 }) {\n  const response = await axios.get(\n    `movie/upcoming?api_key=${key}&language=en-US&page=${pageParam}`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (!query) {\n    return;\n  }\n  const response = await axios.get(\n    `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  if (!results.length) {\n    toast.info('Movies were not found');\n  }\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function similarMovies({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/similar?api_key=${key}&language=en-US&page=${pageParam}`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function actorDetails({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function filmsByActor({ queryKey }) {\n  const [_key, { actorId }] = queryKey;\n  console.log(`${_key}`);\n  try {\n    const response = await axios.get(\n      `person/${actorId}/movie_credits?api_key=${key}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    return error.response.status;\n  }\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n\nexport async function fetchMovieTrailers(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${key}&language=en-US`\n  );\n  return response.data.results;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"names":["List","styled","children","Wrap","SkeletonRectangle","Skeleton","SkeletonText","Container","SkeletonWrap","variant","animation","Card","props","theme","textColor","Genre","bgElementColor","InfoWrap","Rate","Rating","movie","poster_path","title","vote_average","name","genreIds","genres","window","localStorage","getItem","parsedGenres","JSON","parse","length","find","id","getGenreName","genre_ids","src","imageNotFound","alt","value","toFixed","readOnly","precision","Bar","bgSearchBar","SearchForm","onSubmit","onChange","useState","inputValue","setInputValue","e","preventDefault","type","Search","autoComplete","autoFocus","placeholder","input","target","trim","FetchMarker","query","location","useLocation","navigate","useNavigate","useInView","threshold","ListRef","ref","inView","useInfiniteQuery","searchMovie","enabled","staleTime","cacheTime","getNextPageParam","pages","nextPage","totalPages","data","error","fetchNextPage","isLoading","isError","isSuccess","refetch","useEffect","state","prevQuery","search","slice","handleSubmit","results","GallerySkeleton","toast","message","console","log","map","CardList","to","from","MovieCard","axios","key","fetchTrendmovies","response","fetchMoviesGenres","fetchMoviesByGenre","pageParam","queryKey","_key","genreId","total_pages","fetchSimilarMovies","pageNumber","Math","floor","random","fetchTopRatedMovies","fetchUpcomingMovies","movieDetails","movieId","status","actorDetails","actorId","filmsByActor","movieCast","movieReviews","fetchMovieTrailers","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
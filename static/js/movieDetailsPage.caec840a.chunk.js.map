{"version":3,"file":"static/js/movieDetailsPage.caec840a.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 10px;\n\n  & > img {\n    width: 300px;\n    height: auto;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 40%;\n  & > h1,\n  h2 {\n    margin-bottom: 10px;\n  }\n\n  & h2 {\n    font-size: 20px;\n    font-weight: 500;\n    font-style: italic;\n    color: #817d7d;\n  }\n\n  & > p {\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MainInfo = styled.ul`\n  width: 70%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n\n  & > li:first-child {\n    font-weight: 600;\n    text-align: left;\n    margin-right: 20px;\n  }\n\n  & > li:last-child {\n    text-align: right;\n  }\n\n  & > li > p + p {\n    margin-top: 10px;\n  }\n`;\n\nexport const MovieGenresList = styled.ul`\n  width: 70%;\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n\n  & > li {\n    padding: 5px;\n    background-color: var(--main-bcg-color);\n    color: var(--add-text-color);\n    border-radius: 5px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  InfoWrap,\n  Container,\n  MainInfo,\n  MovieGenresList,\n} from './MovieInfo.styled';\n\nconst Movieinfo = ({ movieData }) => {\n  const {\n    poster_path,\n    release_date,\n    title,\n    tagline,\n    runtime,\n    overview,\n    budget,\n    genres,\n  } = movieData;\n  return (\n    <Container>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        ></img>\n      </div>\n      <InfoWrap>\n        <h1>{title}</h1>\n        {tagline !== '' && <h2>\"{tagline}\"</h2>}\n        <p>{overview}</p>\n        <MainInfo>\n          <li>\n            <p>Release date:</p>\n            <p>Runtime:</p>\n            {budget !== 0 && <p>Budget:</p>}\n          </li>\n          <li>\n            <p> {release_date}</p>\n            <p>{runtime} minutes </p>\n            {budget !== 0 && <p>{budget} $</p>}\n          </li>\n        </MainInfo>\n        <MovieGenresList>\n          {genres.map(({ id, name }) => (\n            <li key={id}>\n              <p>{name}</p>\n            </li>\n          ))}\n        </MovieGenresList>\n      </InfoWrap>\n    </Container>\n  );\n};\n\nMovieinfo.propTypes = {\n  movieData: PropTypes.shape({\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    runtime: PropTypes.number.isRequired,\n    budget: PropTypes.number,\n    genres: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Movieinfo;\n","import { useParams, Link, Route, Routes } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { lazy, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport ThreeDots from 'components/Loaders/Loader';\nimport { movieDetails } from 'services/api';\nimport MovieInfo from 'components/MovieInfo';\nconst Cast = lazy(() =>\n  import('components/Cast' /* webpackChunkName: \"cast\" */)\n);\nconst Reviews = lazy(() =>\n  import('components/Reviews' /* webpackChunkName: \"reviews\" */)\n);\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n\n  const { data, error, isLoading, isError, isSuccess } = useQuery(\n    ['movieDetails', { movieId }],\n    movieDetails,\n    { staleTime: 60000, cacheTime: 60000 }\n  );\n\n  if (isLoading) {\n    return <ThreeDots />;\n  }\n\n  if (isError) {\n    return toast.error(`Ошибка: ${error.message}`);\n  }\n\n  if (isSuccess) {\n    return (\n      <>\n        <MovieInfo movieData={data} />\n        <div>\n          <p>Additional imformation</p>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </div>\n        <Suspense fallback={<ThreeDots />}>\n          <Routes>\n            <Route path=\"/cast\" element={<Cast />}></Route>\n            <Route path=\"/reviews\" element={<Reviews />}></Route>\n          </Routes>\n        </Suspense>\n      </>\n    );\n  }\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = `105ba628fde77462ee84526f3393a31c`;\n\nexport async function fetchTrendmovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  return response.data.results;\n}\n\nexport async function searchMovie({ pageParam = 1, queryKey }) {\n  const [_key, { query }] = queryKey;\n  console.log(`${_key}`);\n  if (query !== '') {\n    const response = await axios.get(\n      `search/movie?api_key=${key}&language=en-US&query=${query}&page=${pageParam}&include_adult=false`\n    );\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    return { results, nextPage: pageParam + 1, totalPages: totalPages };\n  }\n}\n\nexport async function movieDetails({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCast({ queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${key}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews({ pageParam = 1, queryKey }) {\n  const [_key, { movieId }] = queryKey;\n  console.log(`${_key}`);\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  const totalPages = response.data.total_pages;\n  return { results, nextPage: pageParam + 1, totalPages: totalPages };\n}\n"],"names":["Container","styled","InfoWrap","MainInfo","MovieGenresList","movieData","poster_path","release_date","title","tagline","runtime","overview","budget","genres","src","alt","map","id","name","Cast","lazy","Reviews","movieId","useParams","useQuery","movieDetails","staleTime","cacheTime","data","error","isLoading","isError","isSuccess","toast","message","MovieInfo","to","Suspense","fallback","path","element","axios","key","fetchTrendmovies","response","results","searchMovie","pageParam","queryKey","_key","query","console","log","totalPages","total_pages","nextPage","movieCast","movieReviews"],"sourceRoot":""}